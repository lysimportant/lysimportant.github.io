<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构 -- hash</title>
      <link href="/2022/07/07/shu-ju-jie-gou-yu-suan-fa/4-hash/"/>
      <url>/2022/07/07/shu-ju-jie-gou-yu-suan-fa/4-hash/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不需要下标号查询 但浪费空间</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React</title>
      <link href="/2022/07/04/react/react/"/>
      <url>/2022/07/04/react/react/</url>
      
        <content type="html"><![CDATA[<blockquote><p>setState 一般情况下是异步的，但在 dom 的事件或者 setTimeout 中是同步的</p></blockquote><ul><li>类组件<ul><li>手动阻断 render 更新 : shouldComponentUpdate (nextProps, nextState) true 更新 false 不更新</li><li>PureComponent 自动判断阻止 render</li></ul></li><li>函数组件<ul><li>memo 包裹函数组件返回一个新的函数组件</li></ul></li></ul><blockquote><p>事件总线 events</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> EventEmitter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"events"</span><span class="token punctuation">;</span><span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>refs 字符串 函数 对象 可以获取类组件的 ref 但是函数组件不行因为它们并没有实例</p></blockquote><h2 id="hoc-高阶组件"><a class="markdownIt-Anchor" href="#hoc-高阶组件">#</a> HOC 高阶组件</h2><blockquote><p>高阶组件 (HOC) 的参数是组件，返回值为新组件的函数</p></blockquote><blockquote><p>把组件接受的参数全传递下去  &lt;Com {…this.props} /&gt; | tontext | redux</p></blockquote><h2 id="绑定函数的三种方式"><a class="markdownIt-Anchor" href="#绑定函数的三种方式">#</a> 绑定函数的三种方式</h2><blockquote><p>React 类中写 bind () =&gt;  () =&gt;</p></blockquote><h2 id="classnames"><a class="markdownIt-Anchor" href="#classnames">#</a> classnames</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token constant">CNS</span> <span class="token keyword">from</span> <span class="token string">'classnames'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">PureComponent</span><span class="token operator">&lt;</span>any<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">isActive</span><span class="token operator">:</span> boolean<span class="token punctuation">&#125;</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">props</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">isActive</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> isActive <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    <span class="token keyword">const</span> isBar <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> errClass <span class="token operator">=</span> <span class="token string">'errorc'</span>    <span class="token keyword">const</span> warn <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h2 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"foo bar active"</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>h3 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"foo"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>isActive <span class="token operator">?</span> <span class="token string">' active'</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token string">"foo"</span> <span class="token punctuation">,</span> <span class="token punctuation">(</span>isActive <span class="token operator">?</span> <span class="token string">' active'</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token comment">/* 库添加 classnams */</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span>h3 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">CNS</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">,</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">CNS</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string-property property">"active1"</span><span class="token operator">:</span> isActive<span class="token punctuation">,</span> <span class="token string-property property">'bar'</span><span class="token operator">:</span> isBar<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3 className<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">CNS</span><span class="token punctuation">(</span><span class="token string">"foo"</span><span class="token punctuation">,</span> errClass<span class="token punctuation">,</span> warn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>我是标题<span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span>我是标题<span class="token number">6</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span>我是标题<span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">  <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 1.构造器中修改绑定 生成新的函数指向构造器</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>increment <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>increment<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">&#125;</span>    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number <span class="token operator">+=</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>第二种 类中箭头函数</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">  <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>increment<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 箭头函数中没有绑定this会向外层作用域绑定this</span>    <span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number <span class="token operator">+=</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>第三种 模板箭头函数 函数调用的方式：方便传值</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">  <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 箭头函数中没有绑定this会向外层作用域绑定this</span>    <span class="token function">increment</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number <span class="token operator">+=</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组件分类"><a class="markdownIt-Anchor" href="#组件分类">#</a> 组件分类</h2><ul><li>React 的组件相对于 Vue 更加的灵活和多样，按照不同的方式可以分成很多类组件：</li></ul><ol><li>根据组件的定义方式，可以分为：函数组件 (Functional Component) 和类组件 (Class Component)；</li><li>根据组件内部是否有状态需要维护，可以分成：无状态组件 (Stateless Component) 和有状态组件 (Stateful Component)；</li><li>根据组件的不同职责，可以分成：展示型组件 (Presentational Component) 和容器型组件 (Container Component)；</li></ol><ul><li>这些概念有很多重叠，但是他们最主要是关注数据逻辑和 UI 展示的分离：<ol><li>函数组件、无状态组件、展示型组件主要关注 UI 的展示；</li><li>类组件、有状态组件、容器型组件主要关注数据逻辑；</li></ol></li></ul><h2 id="react-生命周期-图"><a class="markdownIt-Anchor" href="#react-生命周期-图">#</a> React 生命周期 <a href="https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/">图</a></h2><ol><li>componentDidMount 挂载后</li><li>getSnapshotBeforeUpdate 更新前</li><li>componentDidUpdate (prevProps, prevState, snapshot) 更新后</li><li>componentWillUnmount 卸载后</li></ol><h2 id="父子传值"><a class="markdownIt-Anchor" href="#父子传值">#</a> 父子传值</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 类 子组件</span><span class="token keyword">class</span> <span class="token class-name">ChildCpn</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 默认实现了此操作 可</span>  <span class="token comment">// constructor(props) &#123;</span>  <span class="token comment">//   super(props);</span>  <span class="token comment">// &#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>子组件展示数据<span class="token operator">:</span> <span class="token punctuation">&#123;</span>name <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> height<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>函数 子组件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment">// 无需this直接使用</span><span class="token keyword">function</span> <span class="token function">ChildCpn</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height <span class="token punctuation">&#125;</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h2<span class="token operator">></span>函数子组件展示数据<span class="token operator">:</span> <span class="token punctuation">&#123;</span>name <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> height<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>ChildCpn name<span class="token operator">=</span><span class="token string">"why"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">191</span><span class="token punctuation">&#125;</span> height<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1.89</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildCpn<span class="token operator">></span>      <span class="token operator">&lt;</span>ChildCpn name<span class="token operator">=</span><span class="token string">"coderwhy"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1911</span><span class="token punctuation">&#125;</span> height<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">21.89</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildCpn<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="组件传值验证-默认值-prop-types"><a class="markdownIt-Anchor" href="#组件传值验证-默认值-prop-types">#</a> 组件传值验证 &amp; 默认值 prop-types</h3><blockquote><p>函数组件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> propTypes <span class="token keyword">from</span> <span class="token string">"prop-types"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">ChildCpn</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">,</span> names <span class="token punctuation">&#125;</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h2<span class="token operator">></span>函数子组件展示数据<span class="token operator">:</span> <span class="token punctuation">&#123;</span>name <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> height<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token punctuation">&#123;</span>names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>              <span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span>index<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// isRequired 此属性值必须要传</span>ChildCpn<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token literal-property property">age</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  <span class="token literal-property property">names</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>array<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 默认值</span>ChildCpn<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'sad'</span><span class="token punctuation">,</span>  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1233</span><span class="token punctuation">,</span>  <span class="token literal-property property">names</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'123'</span><span class="token punctuation">,</span><span class="token string">'456'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>ChildCpn name<span class="token operator">=</span><span class="token string">"why"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">191</span><span class="token punctuation">&#125;</span> height<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1.89</span><span class="token punctuation">&#125;</span> names<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildCpn<span class="token operator">></span>      <span class="token operator">&lt;</span>ChildCpn name<span class="token operator">=</span><span class="token string">"coderwhy"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1911</span><span class="token punctuation">&#125;</span> height<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">21.89</span><span class="token punctuation">&#125;</span> names<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildCpn<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>类组件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 和 函数组件一样 多一个 static 静态定义 propTypes</span><span class="token keyword">class</span> <span class="token class-name">Child2</span> <span class="token keyword">extends</span>  <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>    <span class="token literal-property property">age</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// defaultProps</span>Child2<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token literal-property property">age</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="组件通信案例"><a class="markdownIt-Anchor" href="#组件通信案例">#</a> 组件通信案例</h3><blockquote><p>父组件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> TabControl <span class="token keyword">from</span> <span class="token string">"./TabControl"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> index <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>TabControl          changeIndex<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token parameter">index</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changeIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>          index<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>index<span class="token punctuation">&#125;</span>          titles<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token string">"流行"</span><span class="token punctuation">,</span> <span class="token string">"新款"</span><span class="token punctuation">,</span> <span class="token string">"精选"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>TabControl<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span> <span class="token punctuation">&#123;</span>index <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">"流行"</span> <span class="token operator">:</span> index <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"新款"</span> <span class="token operator">:</span> <span class="token string">"精选"</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">changeIndex</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      index    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>子组件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./index.css"</span><span class="token punctuation">;</span><span class="token keyword">import</span> propTypes <span class="token keyword">from</span> <span class="token string">"prop-types"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">TabControl</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> titles<span class="token punctuation">,</span> changeIndex<span class="token punctuation">,</span> index <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token punctuation">&#123;</span>titles<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>              <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">changeIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>                <span class="token operator">&lt;</span>span className<span class="token operator">=</span><span class="token punctuation">&#123;</span>i <span class="token operator">===</span> index <span class="token operator">?</span> <span class="token string">"active"</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>TabControl<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">titles</span><span class="token operator">:</span> propTypes<span class="token punctuation">.</span>array<span class="token punctuation">.</span>isRequired<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>TabControl<span class="token punctuation">.</span>defaultPorps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">titles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>index.css</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">ul</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ul li</span> <span class="token punctuation">&#123;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 33.3%<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ul li span</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all .3s linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.active</span> <span class="token punctuation">&#123;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 3px solid red<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="跨组件通讯"><a class="markdownIt-Anchor" href="#跨组件通讯">#</a> 跨组件通讯</h2><blockquote><p>使用 props 传值</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Two</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> conter<span class="token punctuation">,</span> increment <span class="token punctuation">&#125;</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"red"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>Two <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span>conter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> conter<span class="token punctuation">,</span> increment <span class="token punctuation">&#125;</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"blue"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>One <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span>conter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token punctuation">&#123;</span><span class="token comment">/* &lt;Two increment=&#123;increment&#125; counter=&#123;counter&#125;>&lt;/Two> */</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span>Two <span class="token punctuation">&#123;</span><span class="token operator">...</span>props<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Two<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>One increment<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> conter<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>conter<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>One<span class="token operator">></span>        <span class="token operator">&lt;</span>One <span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>One<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 使用箭头就无需绑定bind(this)</span>  <span class="token comment">// increment = index => &#123;</span>  <span class="token comment">//   this.setState(&#123;</span>  <span class="token comment">//     conter: Math.random() * index ?? this.state.conter + 1</span>  <span class="token comment">//   &#125;);</span>  <span class="token comment">// &#125;;</span>  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> index <span class="token operator">??</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>conter <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="context-api"><a class="markdownIt-Anchor" href="#context-api">#</a> Context API</h2><ol><li>React.createContext () 创建 context</li><li>React.Provider 包裹组件</li></ol><h3 id="类组件使用"><a class="markdownIt-Anchor" href="#类组件使用">#</a> 类组件使用</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> MyContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Two</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"red"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>Two <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>conter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//</span>Two<span class="token punctuation">.</span>contextType <span class="token operator">=</span> MyContext<span class="token punctuation">;</span><span class="token comment">//</span><span class="token keyword">function</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"blue"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Two<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Two<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>MyContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">&#125;</span><span class="token operator">></span>          <span class="token operator">&lt;</span>One<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>One<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>MyContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token comment">/* &lt;One &#123;...this.state&#125;>&lt;/One> */</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 使用箭头就无需绑定bind(this)</span>  <span class="token comment">// increment = index => &#123;</span>  <span class="token comment">//   this.setState(&#123;</span>  <span class="token comment">//     conter: Math.random() * index ?? this.state.conter + 1</span>  <span class="token comment">//   &#125;);</span>  <span class="token comment">// &#125;;</span>  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> index <span class="token operator">??</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>conter <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数组件的使用"><a class="markdownIt-Anchor" href="#函数组件的使用">#</a> 函数组件的使用</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> MyContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Two</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"red"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>MyContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>div<span class="token operator">></span>Two <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span>value<span class="token punctuation">.</span>conter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> value<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>MyContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"blue"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Two<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Two<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>MyContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">&#125;</span><span class="token operator">></span>          <span class="token operator">&lt;</span>One<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>One<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>MyContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token comment">/* &lt;One &#123;...this.state&#125;>&lt;/One> */</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 使用箭头就无需绑定bind(this)</span>  <span class="token comment">// increment = index => &#123;</span>  <span class="token comment">//   this.setState(&#123;</span>  <span class="token comment">//     conter: Math.random() * index ?? this.state.conter + 1</span>  <span class="token comment">//   &#125;);</span>  <span class="token comment">// &#125;;</span>  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> index <span class="token operator">??</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>conter <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多个context的使用推荐使用-redux"><a class="markdownIt-Anchor" href="#多个context的使用推荐使用-redux">#</a> 多个 context 的使用 (推荐使用 Redux)</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> MyContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ThemeContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"pink"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Two</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"red"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>MyContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>ThemeContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                  <span class="token operator">&lt;</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>Two <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span>value<span class="token punctuation">.</span>conter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> value<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span>h1 style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>color <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>颜色<span class="token operator">:</span> red <span class="token punctuation">&#123;</span>theme<span class="token punctuation">.</span>color<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>ThemeContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>          <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>MyContext<span class="token punctuation">.</span>Consumer<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"blue"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Two<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Two<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>MyContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">&#125;</span><span class="token operator">></span>          <span class="token operator">&lt;</span>ThemeContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"pink"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>            <span class="token operator">&lt;</span>One<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>One<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>ThemeContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>MyContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token comment">/* &lt;One &#123;...this.state&#125;>&lt;/One> */</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 使用箭头就无需绑定bind(this)</span>  <span class="token comment">// increment = index => &#123;</span>  <span class="token comment">//   this.setState(&#123;</span>  <span class="token comment">//     conter: Math.random() * index ?? this.state.conter + 1</span>  <span class="token comment">//   &#125;);</span>  <span class="token comment">// &#125;;</span>  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">conter</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> index <span class="token operator">??</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>conter <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="redux"><a class="markdownIt-Anchor" href="#redux">#</a> Redux</h2><ul><li>单一数据源<ul><li>整个应用程序的 state 被存储在一颗 object tree 中，并且这个 object tree 只存储在一个 store 中：</li><li>Redux 并没有强制让我们不能创建多个 Store，但是那样做并不利于数据的维护；</li><li>单一的数据源可以让整个应用程序的 state 变得方便维护、追踪、修改；</li></ul></li><li>State 是只读的<ul><li>唯一修改 State 的方法一定是触发 action，不要试图在其他地方通过任何的方式来修改 State：</li><li>这样就确保了 View 或网络请求都不能直接修改 state，它们只能通过 action 来描述自己想要如何修改 state；</li><li>这样可以保证所有的修改都被集中化处理，并且按照严格的顺序来执行，所以不需要担心 race condition（竟态）的问题；</li></ul></li><li>使用纯函数来执行修改<ul><li>通过 reducer 将 旧 state 和 actions 联系在一起，并且返回一个新的 State：</li><li>随着应用程序的复杂度增加，我们可以将 reducer 拆分成多个小的 reducers，分别操作不同 state tree 的一部分；</li><li>但是所有的 reducer 都应该是纯函数，不能产生任何的副作用；</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 高级</title>
      <link href="/2022/07/01/js/j-gao-ji/"/>
      <url>/2022/07/01/js/j-gao-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>code 编译过程：源代码 -(GO - GlobalObject | VO - variable Object | 变量提升 - undefined)&gt; AST -&gt; ByteCode -&gt; Run</p></blockquote><ul><li>函数执行栈 -&gt; GO -&gt; VO -&gt; AO<ul><li>函数执行上下文 (作用域定义地方决定) AO</li><li>GEC Global Excution Context 全局执行上下文</li><li>FEC Function Excution Context 函数执行上下文</li><li>es6 环境变量 -&gt; variable  Enviroment 环境记录</li></ul></li></ul><blockquote><p>垃圾回收算法:</p></blockquote><p>1. 引用计数</p><ul><li>缺陷：循环引用</li></ul><ol start="2"><li>标记清除</li></ol><ul><li>从 root 开始查找</li></ul><blockquote><p>高级函数：一个函数的参数是另一个函数或者一个函数的返回值是一个函数</p></blockquote><h2 id="数组的高阶函数"><a class="markdownIt-Anchor" href="#数组的高阶函数">#</a> 数组的高阶函数</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1. arr.filter 过滤</span><span class="token comment">// 2. arr.map</span><span class="token comment">// 3. arr.reduce</span><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">546</span><span class="token punctuation">,</span> <span class="token number">546</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">let</span> res<span class="token punctuation">;</span>res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=></span> num <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"filter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"map"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> pre <span class="token operator">+</span> next<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"reduce"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// nums.forEach(item => console.log(item));</span>res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item <span class="token operator">===</span> <span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"find"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item <span class="token operator">===</span> <span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"findIndex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> firend <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"why1"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">180</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"why2"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1800</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"why3"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>res <span class="token operator">=</span> firend<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">"why2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>res <span class="token operator">=</span> firend<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">"why2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="作用域链-scope-china-ao-go"><a class="markdownIt-Anchor" href="#作用域链-scope-china-ao-go">#</a> 作用域链 (scope china) -&gt; (AO + GO)</h2><h2 id="模板字符串调用函数"><a class="markdownIt-Anchor" href="#模板字符串调用函数">#</a> 模板字符串调用函数</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">.</span><span class="token punctuation">.</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>test<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">aaa</span><span class="token template-punctuation string">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="纯函数"><a class="markdownIt-Anchor" href="#纯函数">#</a> 纯函数</h2><ul><li>确定的输入和输出 没有产生任何副作用 (改变，输出，事件等)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构 -- 队列</title>
      <link href="/2022/07/01/shu-ju-jie-gou-yu-suan-fa/2-dui-lie/"/>
      <url>/2022/07/01/shu-ju-jie-gou-yu-suan-fa/2-dui-lie/</url>
      
        <content type="html"><![CDATA[<h2 id="队列的定义"><a href="#队列的定义" class="headerlink" title="队列的定义"></a>队列的定义</h2><blockquote><p>队列是一种特殊的<a href="https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E8%A1%A8/3228081">线性表</a>，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。</p></blockquote><h1 id="队列的方法"><a href="#队列的方法" class="headerlink" title="队列的方法"></a>队列的方法</h1><ol><li>enqueue(element):向队列尾部添加一个(或多个)新的项。</li><li>dequeue()︰移除队列的第一（即排在队列最前面的）项，并返回被移除的元素。</li><li>front():返回队列中第一个元素__最先被添加，也将是最先被移除的元素。 队列不做任何变动(不移除元素只返回元素信息-与Stack类的peek方法非常类似)。</li><li>isEmpty():如果队列中不包含任何元素，返回true，否则返回false。</li><li>size():返回队列包含的元素个数，与数组的length属性类似。</li><li>toString():将队列中的内容,转成字符串形式</li></ol><h1 id="队列的简单封装"><a href="#队列的简单封装" class="headerlink" title="队列的简单封装"></a>队列的简单封装</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 队列的封装 先进先出 </span><span class="token keyword">function</span> <span class="token function">Queue</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 属性</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment">// 方法     </span>  <span class="token comment">// 1. 将元素加入队列</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">enqueue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 2. 从队列取出前端元素并删除</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">dequeue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3. 查看一下前端元素</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">front</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 4. 判断队列是否为空</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">isEmpty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 5. 获取队列中元素的个数</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">size</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length  <span class="token punctuation">&#125;</span>  <span class="token comment">// 6. toString 方法</span>  <span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>调用</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">'地区乌当区'</span><span class="token punctuation">)</span>q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">'地区乌'</span><span class="token punctuation">)</span>q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">'地区乌23'</span><span class="token punctuation">)</span>q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="面试题-–-gt-击鼓传花"><a href="#面试题-–-gt-击鼓传花" class="headerlink" title="面试题  –&gt; 击鼓传花"></a>面试题  –&gt; 击鼓传花</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 击鼓传花</span>  <span class="token keyword">function</span> <span class="token function">passGame</span> <span class="token punctuation">(</span><span class="token parameter">nameList<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1. 创建一个队列</span>    <span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 2. 把所有人依次添加到队列</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nameList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>nameList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 3. 开始数数字          不是nam的时候,重新添加到队列的末尾          是num数字的时候,将其在队列中删除       3.1 num数字之前的重新放入到队列的末尾    */</span>   <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 3.2 num对于的数字删除</span>    queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>    <span class="token comment">// 4. 获取剩下的那个人</span>    <span class="token comment">// alert(queue.size())</span>    <span class="token keyword">let</span> endName <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'最后剩下的人是: '</span> <span class="token operator">+</span> endName<span class="token punctuation">)</span>    <span class="token keyword">return</span> nameList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>endName<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Lily'</span><span class="token punctuation">,</span> <span class="token string">'Lucy'</span><span class="token punctuation">,</span> <span class="token string">'Tom'</span><span class="token punctuation">,</span> <span class="token string">'Lilei'</span><span class="token punctuation">,</span> <span class="token string">'Why'</span><span class="token punctuation">]</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">passGame</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h1><p><img src="https://img-blog.csdnimg.cn/8496bfb85e564e75a7be03700b4ece76.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Njg1ODc2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="优先队列的实现"><a href="#优先队列的实现" class="headerlink" title="优先队列的实现"></a>优先队列的实现</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 封装优先级队列</span><span class="token keyword">function</span> <span class="token function">ProorityQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// PriorityQueue里创建一个类: 内部类</span>  <span class="token keyword">function</span> <span class="token function">QueueElement</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> priority</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> element    <span class="token keyword">this</span><span class="token punctuation">.</span>priority <span class="token operator">=</span> priority  <span class="token punctuation">&#125;</span>  <span class="token comment">// 封装属性</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">enqueue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> priority</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 创建QueueElement对象</span>    <span class="token keyword">let</span> queueElement <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueueElement</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> priority<span class="token punctuation">)</span>    <span class="token comment">// 数组没有元素时不用比较直接添加</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>queueElement<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> added <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token comment">// 遍历元素进行比较</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 判断优先级</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>queueElement<span class="token punctuation">.</span>priority <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>priority<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> queueElement<span class="token punctuation">)</span>          added <span class="token operator">=</span> <span class="token boolean">true</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>added<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>queueElement<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 2. 从队列取出前端元素并删除</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">dequeue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3. 查看一下前端元素</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">front</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 4. 判断队列是否为空</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">isEmpty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 5. 获取队列中元素的个数</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">size</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length  <span class="token punctuation">&#125;</span>  <span class="token comment">// 6. toString 方法</span>  <span class="token class-name">ProorityQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// return this.items.join(' ')</span>    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      str <span class="token operator">+=</span> item<span class="token punctuation">.</span>element <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>priority <span class="token operator">+</span> <span class="token string">'--  '</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> str  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构 -- 栈</title>
      <link href="/2022/07/01/shu-ju-jie-gou-yu-suan-fa/1-zhan/"/>
      <url>/2022/07/01/shu-ju-jie-gou-yu-suan-fa/1-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="栈的方法"><a href="#栈的方法" class="headerlink" title="栈的方法"></a>栈的方法</h2><ol><li>push(element) :添加一个新元素到栈顶位置.</li><li>pop() ∶移除栈顶的元素，同时返回被移除的元素。</li><li>peek() :返回栈顶的元素，不对栈做任何修改(这个方法不会移除栈顶的元素，仅仅返回它)</li><li>isEmpty() :如果栈里没有任何元素就返回true，否则返回false。</li><li>size() :返回栈里的元素个数。这个方法和数组的length属性很类似。</li><li>toString() :将栈结构的内容以字符形式返回.</li></ol><h1 id="栈的说明与定义"><a href="#栈的说明与定义" class="headerlink" title="栈的说明与定义"></a>栈的说明与定义</h1><blockquote><p>栈（stack）又名堆栈，它是一种运算受限的线性表。限定仅在表尾进行插入和删除操作的线性表。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。</p></blockquote><blockquote><p> 栈( stack ) ，它是一种受限的线性表,后进先出(LIFO)<br>其限制是仅允许在,表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。<br>LIFO(last in first out)表示就是后进入的元素,第一个弹出栈空间.类似于自动餐托盘,最后放上的托盘,往往先把拿出去使用.<br>向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素;从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。</p></blockquote><hr><h1 id="简单封装的构造函数-gt-栈"><a href="#简单封装的构造函数-gt-栈" class="headerlink" title="简单封装的构造函数  -&gt; 栈"></a>简单封装的构造函数  -&gt; 栈</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Stack</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 栈中的属性</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token comment">// 1. 将元素压入栈</span>      <span class="token comment">// this.push = function () &#123;&#125; // 不推荐</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 2. 从栈取出元素</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pop</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 3. 查看一下栈顶的元素</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">peek</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 4. 判断栈是否为空</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">isEmpty</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 5. 获取栈中元素的个数</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">size</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length      <span class="token punctuation">&#125;</span>      <span class="token comment">// 6. toString 方法</span>      <span class="token class-name">Stack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span><span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> $ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1008</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>$<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="入栈gif图"><a href="#入栈gif图" class="headerlink" title="入栈gif图"></a>入栈gif图</h1><p><img src="https://img-blog.csdnimg.cn/20191212190125865.gif#pic_center" alt="入栈"></p><h1 id="出栈gif"><a href="#出栈gif" class="headerlink" title="出栈gif"></a>出栈gif</h1><p><img src="https://img-blog.csdnimg.cn/20191212204731172.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="gif图地址-gt-太懒不想搞图"><a href="#gif图地址-gt-太懒不想搞图" class="headerlink" title="gif图地址 -&gt; 太懒不想搞图"></a>gif图地址 -&gt; <a href="https://blog.csdn.net/weixin_43294413/article/details/103512328">太懒不想搞图</a></h1><h1 id="十进制转二进制封装函数"><a href="#十进制转二进制封装函数" class="headerlink" title="十进制转二进制封装函数"></a>十进制转二进制封装函数</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 十进制转二进制</span>   <span class="token keyword">function</span> <span class="token function">dec2bin</span> <span class="token punctuation">(</span><span class="token parameter">decNumber</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 1. 定义对象 decNumber</span>     <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// 2. 循环遍历</span>     <span class="token keyword">while</span> <span class="token punctuation">(</span>decNumber <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 2.1. 获取余数,并放到栈里</span>       stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>decNumber <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span>       <span class="token comment">// 2.2. 获取整除后的结果作为下次运算</span>       decNumber <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>decNumber <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>     <span class="token comment">// 3. 从栈中取出0和1</span>     <span class="token keyword">let</span> binaryString <span class="token operator">=</span> <span class="token string">''</span>     <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       binaryString <span class="token operator">+=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> binaryString   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构 -- 单向链表 &amp; 双向链表</title>
      <link href="/2022/07/01/shu-ju-jie-gou-yu-suan-fa/3-lian-biao/"/>
      <url>/2022/07/01/shu-ju-jie-gou-yu-suan-fa/3-lian-biao/</url>
      
        <content type="html"><![CDATA[<h2 id="优势"><a class="markdownIt-Anchor" href="#优势">#</a> 优势</h2><blockquote><p>存储多个元素 链表<br>不同于数组链表中的数据 <code>不必是连续的空间</code> <br>每个元素有一个 <code>存储元素本身的节点</code> 和  <code>指向下一个元素的引用</code>  组成</p></blockquote><ul><li>优点<ol><li>内存动态管理</li><li>不必创建是就确认链表的大小 可以无线延伸下去</li><li>插入和删除数据 事件复杂度达到 (0,1), 相对数组效率高很多</li></ol></li><li>缺点<ol><li>链表访问任意位置的元素都需要 <code>从头开始访问</code>  (无法跳过第一个元素访问任何一个元素)</li><li>无法直接下标访问元素 需要从头开始 直到找到对应元素</li></ol></li></ul><blockquote><p>列表类似火车头：每一个火车头都有链接下一个火车头的节点 节点上有 data</p></blockquote><h2 id="列表的方法"><a class="markdownIt-Anchor" href="#列表的方法">#</a> 列表的方法</h2><ol><li>append (element) 向列表尾部添加一个新的项</li><li>insetr (position, element) 向列表的特定位置插入一个新的项</li><li>get (position) 获取对应位置的元素</li><li>indexOf (element) 返回元素在列表中的索引。如果列表中没有该元素则返回 - 1</li><li>update (position, element) 修改某个位置的元素</li><li>removeAt (position) 从列表特定的位置移除一项</li><li>remove (element) 从列表中移除一项</li><li>isEmpty () 如果列表中不包含任何元素，返回 true, 链表的长度大于 0 则返回 false</li><li>size () 返回列表包含元素的个数，与数组的 length 类似</li></ol><h2 id="单向链表"><a class="markdownIt-Anchor" href="#单向链表">#</a> 单向链表</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">element</span><span class="token operator">:</span> any<span class="token punctuation">;</span>  <span class="token literal-property property">next</span><span class="token operator">:</span> any<span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">LinkedList</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">head</span><span class="token operator">:</span> any<span class="token punctuation">;</span>  <span class="token literal-property property">length</span><span class="token operator">:</span> number<span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 1. append(element) 向列表尾部添加一个新的项</span>  <span class="token function">append</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 头没有值</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      current<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 2. insetr(position, element) 向列表的特定位置插入一个新的项</span>  <span class="token function">insetr</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">position</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 2.1 是否越界</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment">// 2.2 创建新节点</span>    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 2.3 插入元素</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>      <span class="token keyword">let</span> <span class="token literal-property property">previous</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        previous <span class="token operator">=</span> current<span class="token punctuation">;</span> <span class="token comment">// 前一个node</span>        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span> <span class="token comment">// 当前node</span>      <span class="token punctuation">&#125;</span>      previous<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3. get(position) 获取对应位置的元素</span>  <span class="token function">get</span><span class="token punctuation">(</span>position<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> current<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 4. indexOf(element) 返回元素在列表中的索引.如果列表中没有该元素则返回-1</span>  <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取第一个</span>    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">// 开始循环</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>element <span class="token operator">===</span> element<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> index<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      index<span class="token operator">++</span><span class="token punctuation">;</span>      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 5. removeAt(position) 从列表特定的位置移除一项</span>  <span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">position</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token literal-property property">previous</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        previous <span class="token operator">=</span> current<span class="token punctuation">;</span>        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      previous<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> current<span class="token punctuation">.</span>element<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 6. update(position, element) 修改某个位置的元素</span>  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">position</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insetr</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token comment">// if (position &lt; 0 || position > this.length - 1) return null;</span>    <span class="token comment">// let current = this.head;</span>    <span class="token comment">// let index = 0;</span>    <span class="token comment">// while (index++ &lt; position) &#123;</span>    <span class="token comment">//   current = current.next;</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// current.element = element;</span>    <span class="token comment">// return true;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 7. remove(element) 从列表中移除一项</span>  <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 8. isEmpty() 如果列表中不包含任何元素,返回true,链表的长度大于0则返回false</span>  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 9. size() 返回列表包含元素的个数, 与数组的length类似</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span> LinkedList<span class="token punctuation">,</span> Node <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="双向链表"><a class="markdownIt-Anchor" href="#双向链表">#</a> 双向链表</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> LinkedList<span class="token punctuation">,</span> Node <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./linked_list"</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">DoublyNode</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">prev</span><span class="token operator">:</span> any<span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">DoubleLinkedList</span> <span class="token keyword">extends</span> <span class="token class-name">LinkedList</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">tail</span><span class="token operator">:</span> any<span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 1. append(element) 向列表尾部添加一个新的项</span>  <span class="token function">append</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DoublyNode</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      newNode<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">insetr</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">position</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">element</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DoublyNode</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">===</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      newNode<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>      <span class="token keyword">let</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        prev <span class="token operator">=</span> current<span class="token punctuation">;</span>        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      prev<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>      newNode<span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">;</span>      current<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 5. removeAt(position) 从列表特定的位置移除一项</span>  <span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">position</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> <span class="token literal-property property">previous</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        previous <span class="token operator">=</span> current<span class="token punctuation">;</span>        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      previous<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>      current<span class="token punctuation">.</span>next<span class="token punctuation">.</span>prev <span class="token operator">=</span> previous<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> current<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="程序的测试"><a class="markdownIt-Anchor" href="#程序的测试">#</a> 程序的测试</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> DoubleLinkedList <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./doubly_linked_list"</span><span class="token punctuation">;</span><span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DoubleLinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"aaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"bbb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"ddd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">insetr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">insetr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"cba"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>linkedList<span class="token punctuation">.</span><span class="token function">insetr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"npc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"cba"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack</title>
      <link href="/2022/06/17/tools/webpack/"/>
      <url>/2022/06/17/tools/webpack/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack-五个核心概念"><a class="markdownIt-Anchor" href="#webpack-五个核心概念">#</a> webpack 五个核心概念</h1><ul><li><p>Entry</p><ul><li>入口 (Entry) 指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图<ul><li>单入口 输出一个 chunk 和 多入口 输出多个 chunk</li></ul></li></ul></li><li><p>Output</p><ul><li>输出 (Output) 指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</li></ul></li><li><p>Loader</p><ul><li>Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript)</li></ul></li><li><p>Plugins</p><ul><li>插件 (Plugins) 可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量等。</li></ul></li><li><p>Mode<br> 模式 (Mode) 指示 webpack 使用相应模式的配置。</p></li></ul><table><thead><tr><th>选项</th><th>描述</th><th>特点</th></tr></thead><tbody><tr><td>development</td><td>会将 DefinePlugin 中 process.env.NODE_ENV 的值设置为 development。启用 NamedChunksPlugin 和 NamedModulesPlugin。</td><td>能让代码本地调试运行的环境</td></tr><tr><td>production</td><td>会将 DefinePlugin 中 process.env.NODE_ENV 的值设置为 production。启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。</td><td>能让代码优化上线运行的环境</td></tr></tbody></table><h2 id="初始化配"><a class="markdownIt-Anchor" href="#初始化配">#</a> 初始化配</h2><ul><li>初始化 package.json<ul><li>输入指令:  npm ini</li></ul></li><li>下载并安装 webpack<ul><li><code>npm install webpack@4.41.6 webpack-cli@3.3.11 -g</code></li><li><code>npm install webpack@4.41.6 webpack-cli@3.3.11 -D</code></li><li>最新版本问题：会造成中突导致运行失败 可运行版本：<ul><li><code>npm i webpack@4.16.5  webpack-cli@3.1.0  html-webpack-plugin@3.2.0</code></li></ul></li></ul></li></ul><h2 id="编译打包应用命令"><a class="markdownIt-Anchor" href="#编译打包应用命令">#</a> 编译打包应用命令</h2><ul><li>开发环境指令： <code>webpack src/js/index.js -o build/js/built.js --mode=development</code><ul><li>功能：webpack 能够编译打包 js 和 json 文件，并且能将 es6 的模块化语法转换成浏览器能识别的语法。</li></ul></li><li>生产环境指令： <code>webpack src/js/index.js -o build/js/built.js --mode=production</code><ul><li>功能：在开发配置功能上多一个功能，压缩代码。</li></ul></li><li>结论<br> webpack 能够编译打包 js 和 json 文件。能将 es6 的模块化语法转换成浏览器能识别的语法。能压缩代码。</li><li>问题<br>不能编译打包 css、img 等文件。不能将  js 的 es6 基本语法转化为 es5 以下语法。 需要插件 Loader</li></ul><h2 id="loader下载"><a class="markdownIt-Anchor" href="#loader下载">#</a> Loader 下载</h2><ul><li>css 的 loader<ul><li><code>style-loader</code>  – 把封装的 css 只要以 style 标签引入</li><li><code>css-loader</code>  – 打包 css 资源</li><li><code>less-loader</code>  – 解析 less 变为 css  配置  <code>less</code>  使用</li><li><code>mini-css-extract-plugin</code>   – 把 css 独立封装出来</li><li><code>optimize-css-assets-webpack-plugin</code>  – 压缩 css 资源</li><li><code>postcss-loader@3.0.0 </code>   &amp;   <code>postcss-preset-env</code>  处理 css 的兼容性，需要在 package.json 里配置东西</li></ul></li><li>HTML 和图片等其它资源的 loader<ul><li><code>url-loader</code>  – 可以用来处理 css 的图片资源，不可以处理 HTML 图片</li><li><code>html-loader</code>  ||  <code>html-withimg-loader</code>  – 处理 HTML 的图片</li><li><code>file-loader</code>  – 处理文字图标等资源</li><li><code>html-webpack-plugin</code>  – 处理 HTML 的</li></ul></li><li>js 的 loader<ul><li><code>eslint-loader</code>   &amp;   <code>eslint</code>  &amp;  <code>eslint-config-airbnb-base</code>  &amp;  <code> eslint-plugin-import</code>   – 检测 js 语法 需要在 package.json 配置东西</li><li><code>babel-loader</code>   &amp;  <code>@babel/core </code>  &amp;  <code>core-js</code>  &amp;  <code>babel</code>  – 处理 js 兼容性问题</li><li>基本 js 兼容性处理 --&gt;  <code>@babel/preset-env</code>   – 问题：只能转换基本语法，如 promise 高级语法不能转换</li><li>全部 js 兼容性处理 -&gt;  <code>@babel/polyfill</code>     - 问题：只解决部分兼容性问题，但是将所有兼容性代码全部引入，体积太大了</li><li>需要做兼容性处理的就做：按需加载  --&gt;  <code>core-js</code></li></ul></li><li><code>webpack-dev-server</code>  – 开发模式插件 <code> 在module.exports</code>  添加  <code>target: 'web'</code>  //webpack5 bug 不能自动刷新 解决方案</li></ul><h2 id="webpack初体验"><a class="markdownIt-Anchor" href="#webpack初体验">#</a> webpack 初体验</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*       index.js webpack 入口起点文件    1. 运行指令        开发环境 ： webpack  ./src/index.js -o  ./build/built.js --mode=development            webpack 会义 ./src/index.js 为入口文件，打包后输出到 ./build/built.js            整体打包环境，是开发环境        生产环境 ： webpack  ./src/index.js -o  ./build/built.js  --mode=production            整体打包环境，生产环境     2. 结论        1. webpack 能处理js、json文件,不能处理css/img 等其它资源        2. 生产环境和开发环境将 ES6 模块化编译成浏览器能识别的代码        3. 生产环境比开发环境多一个压缩js代码*/</span><span class="token keyword">import</span> data <span class="token keyword">from</span> <span class="token string">"./data.json"</span><span class="token comment">// import  "./index.css"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> x <span class="token operator">+</span> y <span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="webpack-文件打包配置"><a class="markdownIt-Anchor" href="#webpack-文件打包配置">#</a> webpack 文件打包配置</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*    webpack.config.js  webpack配置文件        作用： 指示webpack  干那些活（当你运行 webpack 指令时，会加载里面的配置）    所有构建工具都是基于  nodejs 平台运行大的~模块化默认采用commonjs。*/</span><span class="token comment">// resolve 用来并接绝对路径的方法</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// webpack 配置</span>    <span class="token comment">// 入口起点</span>    <span class="token literal-property property">entry</span> <span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    <span class="token comment">// 输出</span>    <span class="token literal-property property">output</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 输出 文件名</span>        <span class="token literal-property property">filename</span> <span class="token operator">:</span> <span class="token string">'built.js'</span><span class="token punctuation">,</span>        <span class="token comment">// 输出路径</span>        <span class="token comment">// __dirname nodejs的变量，代表当前文件的目录绝对路径</span>        <span class="token literal-property property">path</span> <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// loader 配置</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span> <span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 详细的loader配置  不同的文件需要不同的loader 处理</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 匹配那些文件  正则表达式</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token comment">// 使用那些loader进行处理</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token comment">// use 数组中loader执行顺序： 从右到左，从上到下 依次执行</span>                    <span class="token comment">// 创建style标签，将js中的样式资源插入进行，添加到head中生效</span>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span>                    <span class="token comment">// 将css文件将commonjs模块加载到js中，里面的内容是样式字符串</span>                    <span class="token string">'css-loader'</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>                    <span class="token string">'less-loader'</span> <span class="token comment">// 将 less文件 编译成css文件  需要 less 和 less-loader</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// plugins（插件） 配置</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// mode 模式的设置</span>    <span class="token literal-property property">mode</span> <span class="token operator">:</span> <span class="token string">'development'</span>  <span class="token comment">// 开发模式</span>    <span class="token comment">// mode : 'production'  // 生产模式</span><span class="token punctuation">&#125;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>## 打包<span class="token constant">HTML</span>资源<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js<span class="token comment">/*    loader ：  1. 下载  2. 使用（配置loader）    plugins ： 1. 下载  2. 引入 3. 使用*/</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// html-webpack-plugin 下载后引入</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'built.js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span>  <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// loader 配置</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token comment">// 配置plugins  nodejs下载 ： html-webpack-plugin</span>        <span class="token comment">// 功能 ： 默认会创建一个空的HTML文件，自动引入打包输出的所有资源（js/css）</span>        <span class="token comment">// 需求 ： 需要有结构的</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 复制  "./src/index.html" 文件。并自动引入打包输出的所有资源（js/css）</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="打包图片资源"><a class="markdownIt-Anchor" href="#打包图片资源">#</a> 打包图片资源</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>resolve<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token comment">// 要使用多个loader处理use</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 问题：默认处理不了HTML的img图片</span>                <span class="token comment">// 处理图片资源 单个直接使用 loader 不用 use | 处理依赖 url-loader file-loader</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"url-loader"</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 图片大小小于 8kb 就会被base64处理</span>                    <span class="token comment">// 优点： 减小请求数量（减轻服务器压力） 缺点：图片体积会更大（文件请求速度更慢）</span>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span><span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                    <span class="token comment">// 问题： 因为url-loader默认使用es6模块化解析，而html-loader引入图片时commonjs</span>                    <span class="token comment">// 解析时会出问题： 关闭url-loader的es6模块化，使用commonjs解析 就可以解决了</span>                    <span class="token literal-property property">esModule</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                    <span class="token comment">// 给图片进行重命名    [hash:10].[ext] 取前十位保持原有的扩展名</span>                    <span class="token literal-property property">name</span> <span class="token operator">:</span> <span class="token string">"[hash:10].[ext]"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token comment">// 处理 HTML文件的图片图片 （负责引入img，从而能被(url-loader/url-withimg-loader)进行处理）</span>                <span class="token comment">// 当 url-loader 处理不来图片时可以 使用 html-withimg-loader</span>                <span class="token comment">// loader: " url-loader " 处理不了</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"html-withimg-loader"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="其它资源打包字体图标等"><a class="markdownIt-Anchor" href="#其它资源打包字体图标等">#</a> 其它资源打包（字体图标等）</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>resolve<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                    <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token comment">// 如何打包自他资源(除了html/css/js资源以外的资源)</span>                <span class="token punctuation">&#123;</span>                    <span class="token comment">// 排除css/js/html资源</span>                    <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|js|html|less)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                    <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">options</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"[hash:10].[ext]"</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">&#125;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>## derServer 帮助服务器开发<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js<span class="token keyword">const</span> <span class="token punctuation">&#123;</span>resolve<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                    <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token comment">// 打包自他资源(除了html/css/js资源以外的资源)</span>                    <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|js|html|less)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                    <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">options</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"[hash:10].[ext]"</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">,</span>    <span class="token comment">// 开发服务器 devServer ：用来自动化（自动化编译，自动打开浏览器，自动刷新浏览器）</span>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出  启动 devServer 指令为 ：  npx webpack-dev-server</span>    <span class="token comment">// 因为依赖问题最新版的webpack-cli没有 所以需要版本为： "webpack-cli": "^3.3.11"</span>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">contentBase</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment">// 项目构建后路径</span>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 启动gzip压缩</span>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        <span class="token comment">// 端口号</span>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token comment">// 自动打开浏览器</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="综合练习"><a class="markdownIt-Anchor" href="#综合练习">#</a> 综合练习</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*    开发环境配置 ：让代码运行        运行项目的指令：            webpack  会将打包结果输出            npx webpack-dev-server  只会在内存中编译打包不会输出结果*/</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>resolve<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"js/built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理css资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>   <span class="token comment">// 处理less资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 处理图片资源</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 关闭es6模块化的解析</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理HTML的img图片</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|js|html|jpg|less|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理其它资源（如字体图等）</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">contentBase</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">## css文件单独提取</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">jsconst &#123;resolve&#125; = require("path");const HtmlWebpackPlugin = require("html-webpack-plugin");// mini-css-extract-plugin 拆分css文件独立const MiniCssExtractPlugin = require("mini-css-extract-plugin");module.exports = &#123;    entry: './src/js/index.js',    output: &#123;        filename: "js/built.js",        path: resolve(__dirname,'build')    &#125;,    module: &#123;        rules: [            &#123;                test: /\.css$/,                use: [                    // 创建一个style标签将样式放入                    // 'style-loader',                    // 这个loader的作用是取代style-loader来单独提取css文件                    MiniCssExtractPlugin.loader,                    // 将css文件整合到js文件中                    'css-loader'                ]            &#125;        ]    &#125;,    plugins: [        new HtmlWebpackPlugin(&#123;            template: "./src/index.html"        &#125;),        new MiniCssExtractPlugin(&#123;            // 对输出的文件重命名 并创建文件夹            filename: 'css/built.css'        &#125;)    ],    mode: 'development'&#125;</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>## css兼容性处理<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// mini-css-extract-plugin 拆分css文件独立</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置nodejs环境变量</span><span class="token comment">// process.env.NODE_ENV = "development";</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"js/built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        css兼容性处理 postcss --> postcss-loader@3.0.0  postcss-preset-env                          帮postcss找到package.json中browserslist里面的配置，通过配置加载指定的css兼容性样式                           "browserslist": &#123;                           // 开发环境 --》 设置node环境变量 ： process.env.NODE_ENV = "development"                                "development": [                                  "last 1 chrome version",                                  "last 1 firefox version",                                  "last 1 safari version",                                  "last 1  IE version"                                ],                                // 生产环境 ： 默认是看生产环境                                "production": [                                  ">0.2%",                                  "not dead",                                  "not op_mini all"                                ]                              &#125;                    */</span>                    <span class="token comment">// 使用默认配置 loader  ： 'postcss-loader'</span>                    <span class="token comment">// 修改loader配置</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>                            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span>                            <span class="token punctuation">]</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">&#125;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">## css 压缩</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">jsconst &#123; resolve &#125; = require("path");const HtmlWebpackPlugin = require("html-webpack-plugin");// mini-css-extract-plugin 拆分css文件独立const MiniCssExtractPlugin = require("mini-css-extract-plugin");// 设置nodejs环境变量// process.env.NODE_ENV = "development";const OptimizeCssAssetsWebpackPlugin = require("optimize-css-assets-webpack-plugin");// optimize-css-assets-webpack-plugin  压缩css的插件module.exports = &#123;    entry: './src/js/index.js',    output: &#123;        filename: "js/built.js",        path: resolve(__dirname,'build')    &#125;,    module: &#123;        rules: [            &#123;                test: /\.css$/,                use: [                    MiniCssExtractPlugin.loader,                    'css-loader',                    &#123;                        loader: "postcss-loader",                        options: &#123;                            ident: 'postcss',                            plugins: () => [                                require("postcss-preset-env")()                            ]                        &#125;                    &#125;                ]            &#125;        ]    &#125;,    plugins: [        new HtmlWebpackPlugin(&#123;            template: "./src/index.html"        &#125;),        new MiniCssExtractPlugin(&#123;            filename: 'css/built.css'        &#125;),        new OptimizeCssAssetsWebpackPlugin()    ],    mode: 'development'&#125;</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>## js语法检测<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token comment">/*                   语法检测 ： 统一代码样式  使用的插件 ： eslint-loader  eslint                       注意：只检测自己写的源代码，第三方的库是不用检测的                       设置检测规则：                            package.json中eslintConfig中设置                            "eslintConfig" : &#123;                                "extends": "airbnb-base"                            &#125;                            airbnb --》 eslint-config-airbnb-base  eslint  eslint-plugin-import                */</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 自动修复错误</span>          <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">## js兼容性处理</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>`js<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">/*        js的兼容性处理 ： babel-loader @babel/core  @babel/preset-env          1. @babel/preset-env ： 处理js基本兼容性问题            问题：只能转换基本语法，如promise不能转换          2. 全部js的兼容性处理 ： @babel/polyfill            问题： 只要解决部分兼容性问题，但是将所有的兼容性代码全部引入，体积太大          3. 需要做兼容性处理的就做：按需加载 --》 core-js      */</span>     <span class="token punctuation">&#123;</span>       <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>       <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>       <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>       <span class="token literal-property property">options</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//  预设： 指示babel做怎么样的兼容性处理</span>        <span class="token comment">//  presets: ['@babel/preset-env']</span>         <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>               <span class="token punctuation">[</span>                 <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                 <span class="token punctuation">&#123;</span>                   <span class="token comment">// 按需加载</span>                   <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                   <span class="token comment">// 指定 corejs 的版本</span>                   <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                     <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span>                   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                   <span class="token comment">// 指定兼容性做到哪个版本的浏览器</span>                   <span class="token literal-property property">targets</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>                      <span class="token literal-property property">chrome</span> <span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                      <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"50"</span><span class="token punctuation">,</span>                      <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"9"</span><span class="token punctuation">,</span>                      <span class="token literal-property property">safari</span><span class="token operator">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span>                      <span class="token literal-property property">edge</span><span class="token operator">:</span> <span class="token string">"17"</span><span class="token punctuation">,</span>                   <span class="token punctuation">&#125;</span>                 <span class="token punctuation">&#125;</span>               <span class="token punctuation">]</span>         <span class="token punctuation">]</span>       <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="js-html压缩"><a class="markdownIt-Anchor" href="#js-html压缩">#</a> js &amp; html 压缩</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>      <span class="token comment">// 压缩HTML配置</span>      <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 移除空格</span>        <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 移除注释</span>        <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span> <span class="token comment">// 开启 production 自动压缩js</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="生产环境配置"><a class="markdownIt-Anchor" href="#生产环境配置">#</a> 生产环境配置</h1><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token comment">// 在package.json 配置文件</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>                            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">]</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token comment">// 在package.json 配置文件</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>                            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">]</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token string">'less-loader'</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">/*                正常讲：一个文件只能被一个loader处理                    当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel            */</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token punctuation">[</span>                           <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                            <span class="token punctuation">&#123;</span>                                <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                    <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                    <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                    <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">]</span>                    <span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hmr-热模块替换更新修改文件"><a class="markdownIt-Anchor" href="#hmr-热模块替换更新修改文件">#</a> HMR 热模块替换 (更新修改文件)</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*    HMR：hot module replacement 热模块替换 、 模块热替换 (修改部分更新)        作用：一个模块发生变化。只会重新打包这一个模块（而不是打包所有的模块） 极大提升构建速度        样式文件 ： 可以使用HMR功能 ： 因为style-loader内部实现了        js文件 ：默认不使用 HMR -> 需要修改 js 代码            注意：HMR功能对 js 的处理，只能处理非入口文件的其他文件        HTML文件 ：默认不使用HMR功能。同时会导致问题： HTML不能热更新！（不需要做HMR功能）            方案： 修改 entry 入口 将 HTML文件引入 （解决热更新）*/</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// target: process.env.NODE_ENV === 'development' ? 'web' : 'browserslist',</span>    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">'web'</span><span class="token punctuation">,</span> <span class="token comment">// webpack5 bug 不能自动刷新 解决方案</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"js/built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理css资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>   <span class="token comment">// 处理less资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 处理图片资源</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 关闭es6模块化的解析</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理HTML的img图片</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|js|html|jpg|less|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理其它资源（如字体图等）</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">contentBase</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 开启 HMR 功能  修改配置重启服务</span>        <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="source-map-压缩后代码映射源代码"><a class="markdownIt-Anchor" href="#source-map-压缩后代码映射源代码">#</a> source-map 压缩后代码映射源代码</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// target: process.env.NODE_ENV === 'development' ? 'web' : 'browserslist',</span>    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">'web'</span><span class="token punctuation">,</span> <span class="token comment">// webpack5 bug 不能自动刷新 解决方案</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">"js/built.js"</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理css资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>   <span class="token comment">// 处理less资源</span>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span><span class="token string">'css-loader'</span><span class="token punctuation">,</span><span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 处理图片资源</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 关闭es6模块化的解析</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理HTML的img图片</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|js|html|jpg|less|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>  <span class="token comment">// 处理其它资源（如字体图等）</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]]'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">"./src/index.html"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">contentBase</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-source-map'</span><span class="token punctuation">&#125;</span><span class="token comment">/*    source-map：一种提供源代码到构建后代码映射技术 （如果构建后代码出错了，通过映射可以追踪到源代码的错误）        [inline-|hidden-|eval-] [nosources-] [cheap-[module]] source-map        source-map : 外部            错误代码的准确信息 和 源代码的错误位置        inline-source-map : 内联            1. 只生成一个 内联 source-map             错误代码的准确信息 和 源代码的错误位置        hidden-source-map ： 外部  防泄露             错误代码的错误原因 但是没有错误的位置 不能追踪源代码错误，只能提示到构建后代码的位置        eval-source-map ： 内部            1. 每一个文件都生成对应的source-map ，都在 eval             错误代码的准确信息 和 源代码的错误位置 hash值        nosources-source-map ： 外部   防泄漏            错误代码的准确信息  但是没有任何源代码信息        cheap-source-map ： 外部             错误代码的准确信息 和 源代码的错误位置             只能精确到行        cheap-module-source-map ： 外部              错误代码的准确信息 和 源代码的错误位置              module会将loader和source-map加入        内联 和 外部 的区别 ：1. 外部生成文件，内联没有 2. 内联构建速度快        开发环境： 速度快，调试更友好            速度快（eval > inline > cheap）            eval-cheap-source-map            eval-source-map            调试更友好 ：source-map > cheap-module-source-map > cheap-source-map            --> eval-source-map  /  eval-cheap-module-source-map        生产环境 ：源代码要不要隐藏？调试要不要更友好            内联会让代码的体积变大 所以在生产环境不同内联            nosources-source-map  全部隐藏            hidden-source-map 只隐藏源代码，会提示构建后的代码错误            --> source-map 、 cheap-module-source-map*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="oneof"><a class="markdownIt-Anchor" href="#oneof">#</a> oneOf</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> CssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 在package.json 配置文件</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 一下loader只会匹配一次</span>                <span class="token comment">// 注意： 不能有两项配置处理同一种类型文件</span>                <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>CssLoader<span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token operator">...</span>CssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        正常讲：一个文件只能被一个loader处理                            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel                    */</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">[</span>                                    <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                                    <span class="token punctuation">&#123;</span>                                        <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                            <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                        <span class="token punctuation">&#125;</span>                                    <span class="token punctuation">&#125;</span>                                <span class="token punctuation">]</span>                            <span class="token punctuation">]</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                            <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="缓存babel"><a class="markdownIt-Anchor" href="#缓存babel">#</a> 缓存 babel</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*    缓存：        babel缓存            cacheDirectory: true            --> 让第二次打包构建速度更快    文件资源缓存        hash： 每次webpack构建时会生成一个唯一的hash值            问题： 因为js和css同时使用一个hash值。如果重新打包会导致所有缓存失效。（可能只改动一个文件）        chunkhash： 根据chunk生成的hash值。如果打包来源于同一个chunk，那么hash值一样            问题： js 和 css 的hash值还是一样的                因为css 是在 js 中被引入的，所以同属于一个chunk        contenthash ： 根据文件的内容生成hash值，不同的文件的hash值一定不一样               --> 让代码上线运行缓存更好使用 */</span><span class="token keyword">const</span> CssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 在package.json 配置文件</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 一下loader只会匹配一次</span>                <span class="token comment">// 注意： 不能有两项配置处理同一种类型文件</span>                <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>CssLoader<span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token operator">...</span>CssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        正常讲：一个文件只能被一个loader处理                            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel                    */</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">[</span>                                    <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                                    <span class="token punctuation">&#123;</span>                                        <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                            <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                        <span class="token punctuation">&#125;</span>                                    <span class="token punctuation">&#125;</span>                                <span class="token punctuation">]</span>                            <span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token comment">// 开启 babel缓存  第二次构建是会去读取之前的缓存</span>                            <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                            <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.[contenthash:10].css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="tree-shaking"><a class="markdownIt-Anchor" href="#tree-shaking">#</a> tree shaking</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*    tree shaking ： 去除无用代码        前提： 1. 必须使用 ES6 模块化 2. 开启 production 环境        作用： 减小代码的体积        在package.json中配置             "sideEffects" : false 所有的代码都没有副作用（都可以进行 tree shaking）             问题：可能会把 css 、 @babel/polyfill （副作用）文件干掉 */</span><span class="token keyword">const</span> CssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 在package.json 配置文件</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 一下loader只会匹配一次</span>                <span class="token comment">// 注意： 不能有两项配置处理同一种类型文件</span>                <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>CssLoader<span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token operator">...</span>CssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        正常讲：一个文件只能被一个loader处理                            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel                    */</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">[</span>                                    <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                                    <span class="token punctuation">&#123;</span>                                        <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                            <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                        <span class="token punctuation">&#125;</span>                                    <span class="token punctuation">&#125;</span>                                <span class="token punctuation">]</span>                            <span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token comment">// 开启 babel缓存  第二次构建是会去读取之前的缓存</span>                            <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                            <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.[contenthash:10].css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="code-split-代码分隔"><a class="markdownIt-Anchor" href="#code-split-代码分隔">#</a> code split 代码分隔</h2><h3 id="demo1"><a class="markdownIt-Anchor" href="#demo1">#</a> demo1</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// entry : './src/js/index.js'  // 单入口文件</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 多入口： 有一个入口，最终输出就有一个 budle</span>        <span class="token literal-property property">index</span> <span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token string">'./src/js/test.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 取文件名 [name] </span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="demo2"><a class="markdownIt-Anchor" href="#demo2">#</a> demo2</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// entry : './src/js/index.js',  // 单入口文件</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token string">'./src/js/test.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 取文件名 [name] </span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*         1. 可以将node_modules中的代码单独打包一个chunk最终输出        2. 自动分析多入口chunk中。有没有公共的文件。如有就会打包成一个单独的chunk            */</span>    <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">chunks</span> <span class="token operator">:</span> <span class="token string">"all"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="demo3"><a class="markdownIt-Anchor" href="#demo3">#</a> demo3</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span> <span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token comment">// 单入口文件</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 取文件名 [name] </span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*         1. 可以将node_modules中的代码单独打包一个chunk最终输出        2. 自动分析多入口chunk中。有没有公共的文件。如有就会打包成一个单独的chunk            */</span>    <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">chunks</span> <span class="token operator">:</span> <span class="token string">"all"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="lazy-loding-懒加载"><a class="markdownIt-Anchor" href="#lazy-loding-懒加载">#</a> lazy loding 懒加载</h2><p>webpack.config.js:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span> <span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token comment">// 单入口文件</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 取文件名 [name] </span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*         1. 可以将node_modules中的代码单独打包一个chunk最终输出        2. 自动分析多入口chunk中。有没有公共的文件。如有就会打包成一个单独的chunk            */</span>    <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">chunks</span> <span class="token operator">:</span> <span class="token string">"all"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"index.js被加载了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// import &#123;mul&#125; from "./test"</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//按钮点击触发</span>  <span class="token comment">// 懒加载~：当文件需要使用时才加载~</span>  <span class="token comment">// 预加载 prefetch：会在使用之前，提前加载js文件 </span>  <span class="token comment">// 正常加载可以认为是并行加载（同一时间加载多个文件）  </span>  <span class="token comment">// 预加载 prefetch：等其他资源加载完毕，浏览器空闲了，再偷偷加载资源</span>  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: 'test', webpackPrefetch: true*/</span><span class="token string">'./test'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> mul <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pwa离线加载"><a class="markdownIt-Anchor" href="#pwa离线加载">#</a> pwa 离线加载</h2><p>webpack.config.js:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> WorkboxWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"workbox-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*    PWA： 渐进式网络开发应用程序（离线可访问）        workbox --> workbox-webpack-plugin */</span><span class="token keyword">const</span> CssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 在package.json 配置文件</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 一下loader只会匹配一次</span>                <span class="token comment">// 注意： 不能有两项配置处理同一种类型文件</span>                <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>CssLoader<span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token operator">...</span>CssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        正常讲：一个文件只能被一个loader处理                            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel                    */</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">[</span>                                    <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                                    <span class="token punctuation">&#123;</span>                                        <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                        <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                            <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                            <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                        <span class="token punctuation">&#125;</span>                                    <span class="token punctuation">&#125;</span>                                <span class="token punctuation">]</span>                            <span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token comment">// 开启 babel缓存  第二次构建是会去读取之前的缓存</span>                            <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                            <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.[contenthash:10].css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">WorkboxWebpackPlugin<span class="token punctuation">.</span>GenerateSW</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">/*                 1. 帮助 serviceworker 快速启动                2. 删除旧的 serviceworker                生成一个serviceworker 配置文件            */</span>            <span class="token literal-property property">clientsClaim</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">skipWaiting</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">&#125;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js：</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>`js<span class="token keyword">import</span> <span class="token string">'../css/box.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../css/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../css/iconfont.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mul <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./test'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=></span> p <span class="token operator">+</span> c<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  1. eslint 不认识 window ，navigation 全局变量    解决： 需要修改package.json 中的 eslintConfig配置      "env": &#123;        "browser": true  // 支持浏览器端全局变量 node：true      &#125;  2. sw 代码必须运行在服务器上      --> nodejs      --> npm i serve -g      serve -s build 启动服务器，将build目录下的所有的资源作为静态资源暴露出去*/</span><span class="token comment">// eslint-disable-next-line</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// eslint-disable-next-line</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 注册 serviceWorker  处理兼容问题</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'serviceWorker'</span> <span class="token keyword">in</span> navigator<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>serviceWorker<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'/service-worker.js'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sw注册成功~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sw注册失败了~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多线程"><a class="markdownIt-Anchor" href="#多线程">#</a> 多线程</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> WorkboxWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"workbox-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*    PWA： 渐进式网络开发应用程序（离线可访问）        workbox --> workbox-webpack-plugin */</span><span class="token comment">/*     thread-loader */</span><span class="token keyword">const</span> CssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>    <span class="token string">'css-loader'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 在package.json 配置文件</span>        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">ident</span><span class="token operator">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>            <span class="token function-variable function">plugins</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-preset-env"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/built.[contenthash:10].js'</span><span class="token punctuation">,</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'build'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 在package.json中配置eslintConfig --》 airbnb</span>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// 一下loader只会匹配一次</span>                <span class="token comment">// 注意： 不能有两项配置处理同一种类型文件</span>                <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>CssLoader<span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token operator">...</span>CssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token comment">/*                        正常讲：一个文件只能被一个loader处理                            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序 先执行 eslint 再 babel                    */</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>                            <span class="token comment">/*                                 开启多线程打包                                进程启动大概为600ms，进程通信也有开销。只有工作消耗时间较长，才需要多进程打包                            */</span>                            <span class="token punctuation">&#123;</span>                                <span class="token literal-property property">loader</span> <span class="token operator">:</span> <span class="token string">'thread-loader'</span><span class="token punctuation">,</span>                                <span class="token literal-property property">options</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                    <span class="token literal-property property">Workers</span> <span class="token operator">:</span> <span class="token number">2</span> <span class="token comment">// 进程 2 个</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                            <span class="token punctuation">&#123;</span>                                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                        <span class="token punctuation">[</span>                                            <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                                            <span class="token punctuation">&#123;</span>                                                <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                                                <span class="token literal-property property">corejs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                                <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                                    <span class="token literal-property property">chrome</span><span class="token operator">:</span> <span class="token string">"60"</span><span class="token punctuation">,</span>                                                    <span class="token literal-property property">ie</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                                                    <span class="token literal-property property">firefox</span><span class="token operator">:</span> <span class="token string">"60"</span>                                                <span class="token punctuation">&#125;</span>                                            <span class="token punctuation">&#125;</span>                                        <span class="token punctuation">]</span>                                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                                    <span class="token comment">// 开启 babel缓存  第二次构建是会去读取之前的缓存</span>                                    <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span>                                 <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">]</span>                                            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>                            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>                            <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'imgs'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(js|css|less|html|jpg|png|gif)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'media'</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'css/built.[contenthash:10].css'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">WorkboxWebpackPlugin<span class="token punctuation">.</span>GenerateSW</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">/*                 1. 帮助 serviceworker 快速启动                2. 删除旧的 serviceworker                生成一个serviceworker 配置文件            */</span>            <span class="token literal-property property">clientsClaim</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">skipWaiting</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue的特性&amp;功能</title>
      <link href="/2022/06/16/vue/vue-zhu-yi-dian/"/>
      <url>/2022/06/16/vue/vue-zhu-yi-dian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>组件的点击事件</p></blockquote><pre class="line-numbers language-Vue" data-language="Vue"><code class="language-Vue">&lt;template&gt;  &lt;myC @click.native&#x3D;&#39;eventClick&#39;&gt;&lt;&#x2F;myC&gt;&lt;&#x2F;template&gt;&lt;script setup lang&#x3D;&quot;ts&quot;&gt;import myC from &#39;@&#x2F;components&#x2F;myC&#39;const eventClick &#x3D; () &#x3D;&gt; &#123;  console.log(&#39;组件被点击了&#39;)&#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;scss&quot;&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pnpm 管理器</title>
      <link href="/2022/06/15/tools/node-pack/"/>
      <url>/2022/06/15/tools/node-pack/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载</p></blockquote><ul><li>Linux &amp; Mac :  <code>wget -qO- https://get.pnpm.io/install.sh | sh -</code></li><li>Windows:  <code>iwr https://get.pnpm.io/install.ps1 -useb | iex</code><ol><li>也可以使用 npm 进行全局安装  <code>npm install -g pnpm</code></li></ol></li></ul><h2 id="基本命令"><a class="markdownIt-Anchor" href="#基本命令">#</a> 基本命令</h2><table><thead><tr><th>npm 命令</th><th>pnpm 等效</th></tr></thead><tbody><tr><td><code>npm install</code></td><td><a href="https://pnpm.io/zh/cli/install"> <code>pnpm install</code> </a></td></tr><tr><td><code>npm i &lt;pkg&gt;</code></td><td><code>pnpm add &lt;pkg&gt;</code></td></tr><tr><td><code>npm run &lt;cmd&gt;</code></td><td><code>pnpm &lt;cmd&gt;</code> ]</td></tr></tbody></table><h2 id="依赖管理命令"><a class="markdownIt-Anchor" href="#依赖管理命令">#</a> 依赖管理命令</h2><table><thead><tr><th>Command</th><th>Meaning</th></tr></thead><tbody><tr><td><code>pnpm add sax</code></td><td>保存到  <code>dependencies</code></td></tr><tr><td><code>pnpm add -D sax</code></td><td>保存到  <code>devDependencies</code></td></tr><tr><td><code>pnpm add -O sax</code></td><td>保存到  <code>optionalDependencies</code></td></tr><tr><td><code>pnpm add -g sax</code></td><td>Install package globally</td></tr><tr><td><code>pnpm add sax@next</code></td><td>从  <code>next</code>  标签下安装</td></tr><tr><td><code>pnpm add sax@3.0.0</code></td><td>安装指定版本  <code>3.0.0</code></td></tr></tbody></table><p><code>pnpm add express@nightly</code></p><h2 id="更新命令-update"><a class="markdownIt-Anchor" href="#更新命令-update">#</a> 更新命令 update</h2><table><thead><tr><th>Command</th><th>Meaning</th></tr></thead><tbody><tr><td><code>pnpm up</code></td><td>遵循  <code>package.json</code>  指定的范围更新所有的依赖项</td></tr><tr><td><code>pnpm up --latest</code></td><td>更新所有依赖项，此操作会忽略  <code>package.json</code>  指定的范围</td></tr><tr><td><code>pnpm up foo@2</code></td><td>将  <code>foo</code>  更新到 v2 上的最新版本</td></tr><tr><td><code>pnpm up &quot;@babel/*&quot;</code></td><td>更新  <code>@babel</code>  范围内的所有依赖项</td></tr></tbody></table><h2 id="删除命令"><a class="markdownIt-Anchor" href="#删除命令">#</a> 删除命令</h2><blockquote><p><code>pnpm [un / rm / uninstall] packageName   [-D / --global]</code></p></blockquote><ul><li><code>-D</code>  仅删除开发环境 devDependencies 中的依赖项。</li><li><code>--global</code>  从全局删除一个依赖包。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>历史项目</title>
      <link href="/2022/06/15/project/"/>
      <url>/2022/06/15/project/</url>
      
        <content type="html"><![CDATA[<blockquote><p>历史项目列表</p></blockquote><h1 id="所有项目文件存放的地址"><a class="markdownIt-Anchor" href="#所有项目文件存放的地址">#</a> 所有项目文件存放的地址</h1><ol><li><a href="https://github.com/lysimportant">github</a> 推</li><li><a href="https://gitee.com/lysimportant">gitee</a></li></ol><h2 id="vue3-tsx-网易云-站点地址链接"><a class="markdownIt-Anchor" href="#vue3-tsx-网易云-站点地址链接">#</a> Vue3 Tsx 网易云 <a href="https://lianghj.top">站点地址链接</a></h2><blockquote><p>7 10 11 12</p></blockquote><p><img src="https://s1.ax1x.com/2022/06/19/XXVCRA.png" alt="首页推荐"><br><img src="https://s1.ax1x.com/2022/06/19/XXVpPH.png" alt="新音乐"><br><img src="https://s1.ax1x.com/2022/06/19/XXExaD.png" alt="排行榜"><br><img src="https://s1.ax1x.com/2022/06/19/XXV9Gd.png" alt="歌单"><br><img src="https://s1.ax1x.com/2022/06/19/XXEzIe.png" alt="歌手"><br><img src="https://s1.ax1x.com/2022/06/19/XXVFMt.png" alt="mv"><br><img src="https://s1.ax1x.com/2022/06/19/XXVksP.png" alt="帐号信息"><br><img src="https://s1.ax1x.com/2022/06/19/XXVPxI.png" alt="歌单详情"></p><h2 id="vue3-小兔鲜商城项目-站点地址链接"><a class="markdownIt-Anchor" href="#vue3-小兔鲜商城项目-站点地址链接">#</a> Vue3 小兔鲜商城项目 <a href="http://xtx.lianghj.top/#/">站点地址链接</a></h2><p><img src="https://s1.ax1x.com/2022/06/19/XXEKu6.png" alt="首页推荐"><br><img src="https://s1.ax1x.com/2022/06/19/XXEe3R.png" alt="分类选择"><br><img src="https://s1.ax1x.com/2022/06/19/XXEmg1.png" alt="登录页面"><br><img src="https://s1.ax1x.com/2022/06/19/XXEAN4.png" alt="商品详情"><br><img src="https://s1.ax1x.com/2022/06/19/XXEE4J.png" alt="购物车"><br><img src="https://s1.ax1x.com/2022/06/19/XXEnjx.png" alt="结算 地址选择"><br><img src="https://s1.ax1x.com/2022/06/19/XXEMDK.png" alt="订单提交页面"><br><img src="https://s1.ax1x.com/2022/06/19/XXEQHO.png" alt="订单支付页面"><br><img src="https://s1.ax1x.com/2022/06/19/XXE1ED.png" alt="订单详情页面"></p><h2 id="vue2-网易云-站点地址链接"><a class="markdownIt-Anchor" href="#vue2-网易云-站点地址链接">#</a> Vue2 网易云  <a href="http://music.lianghj.top/#/home/individuation">站点地址链接</a></h2><p><img src="https://s1.ax1x.com/2022/06/19/XXAcnK.png" alt="首页推荐"><br><img src="https://s1.ax1x.com/2022/06/19/XXAyX6.png" alt="歌单"><br><img src="https://s1.ax1x.com/2022/06/19/XXADpR.png" alt="新音乐"><br><img src="https://s1.ax1x.com/2022/06/19/XXAr11.png" alt="mv"><br><img src="https://s1.ax1x.com/2022/06/19/XXA0h9.png" alt="排行榜"><br><img src="https://s1.ax1x.com/2022/06/19/XXAs6x.png" alt="歌单详情"></p><h2 id="coderwhy-手机端-蘑菇街-站点地址链接"><a class="markdownIt-Anchor" href="#coderwhy-手机端-蘑菇街-站点地址链接">#</a> CoderWhy 手机端 蘑菇街  <a href="http://mall.lianghj.top/">站点地址链接</a></h2><p><img src="https://s1.ax1x.com/2022/06/18/XXkoeU.png" alt="首页"><br><img src="https://s1.ax1x.com/2022/06/18/XXk5LT.png" alt="商品详情"><br><img src="https://s1.ax1x.com/2022/06/18/XXk4yV.png" alt="购物车"></p><h2 id="vue2-电商后台管理系统-站点地址链接"><a class="markdownIt-Anchor" href="#vue2-电商后台管理系统-站点地址链接">#</a> Vue2 电商后台管理系统  <a href="http://admin.lianghj.top/#/login">站点地址链接</a></h2><p><img src="https://s1.ax1x.com/2022/06/18/XXkMxx.png" alt="登录页面"><br><img src="https://s1.ax1x.com/2022/06/18/XXkKR1.png" alt="欢迎页面"><br><img src="https://s1.ax1x.com/2022/06/18/XXklM6.png" alt="角色列表"></p><h2 id="pink-品优购静态页面商城-站点地址链接"><a class="markdownIt-Anchor" href="#pink-品优购静态页面商城-站点地址链接">#</a> Pink 品优购静态页面商城  <a href="http://shop.lianghj.top/#/">站点地址链接</a></h2><p><img src="https://s1.ax1x.com/2022/06/18/XXF78I.png" alt="纯html css js 搭建"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css兼容</title>
      <link href="/2022/06/15/css/jian-rong/"/>
      <url>/2022/06/15/css/jian-rong/</url>
      
        <content type="html"><![CDATA[<ul><li>为了让CSS3样式兼容，需要将某些样式加上浏览器前缀：</li></ul><ol><li><code>-ms-</code> 兼容IE浏览器</li><li><code>-moz-</code> 兼容firefox</li><li><code>-o-</code> 兼容opera</li><li><code>-webkit</code>- 兼容chrome 和 safari</li></ol><blockquote><p>在 <code>chrome</code> 里面样式是没有问题的,切换到 <code>firefox</code> 就出现了 <code>input</code> 和 <code>button</code> 元素之间的不对齐</p></blockquote><p><img src="https://s1.ax1x.com/2022/06/17/Xq500J.png" alt="兼容之前 场景 "></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.el-autocomplete</span> <span class="token punctuation">&#123;</span>  // 在对应的类名里添加 对应浏览器的兼容前缀  <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>添加兼容后</p></blockquote><p><img src="https://s1.ax1x.com/2022/06/17/XqIphq.png" alt="兼容过后 场景"></p><blockquote><p>className:empty {} 判断类是否为空</p></blockquote><h2 id="伪插槽"><a href="#伪插槽" class="headerlink" title="伪插槽"></a>伪插槽</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">// 兄弟元素.left-xd</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.left:empty + .left-xd</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript 体操</title>
      <link href="/2022/06/15/ts/ts-ti-cao/"/>
      <url>/2022/06/15/ts/ts-ti-cao/</url>
      
        <content type="html"><![CDATA[<h2 id="hello-world"><a class="markdownIt-Anchor" href="#hello-world">#</a> Hello World</h2><blockquote><p>template</p></blockquote><pre class="line-numbers language-TypeScript" data-language="TypeScript"><code class="language-TypeScript">&#x2F;&#x2F; type HelloWorld &#x3D; number  &#x2F;&#x2F; 下面Equal的判断为string 现为 number是错误的type HelloWorld &#x3D; string <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>test</p></blockquote><pre class="line-numbers language-TypeScript" data-language="TypeScript"><code class="language-TypeScript">import type &#123; Equal, Expect, NotAny &#125; from &#39;@type-challenges&#x2F;utils&#39;type cases &#x3D; [  Expect&lt;NotAny&lt;HelloWorld&gt;&gt;,  Expect&lt;Equal&lt;HelloWorld, string&gt;&gt;,]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pick"><a class="markdownIt-Anchor" href="#pick">#</a> Pick</h2><blockquote><p>template</p></blockquote><pre class="line-numbers language-TypeScript" data-language="TypeScript"><code class="language-TypeScript">&#x2F;&#x2F; 类型约束 extends   keyof 遍历type MyPick&lt;T, K extends keyof T&gt; &#x3D; &#123;  [P in K]: T[P];&#125;function myPick (todo, keys) &#123;  const obj &#x3D; &#123;&#125;  keys.forEach(key &#x3D;&gt; &#123;    if (key in todo) &#123;      obj[key] &#x3D; todo[key]    &#125;  &#125;);  return obj;&#125;&#x2F;&#x2F; 1. 返回一个对象&#x2F;&#x2F; 2. 遍历forEach&#x2F;&#x2F; 3. todo[key] 取值&#x2F;&#x2F; 4. 看看key 在不在 todo 里面&#x2F;&#x2F; function getPrototype &lt;T, K&gt;(obj: T, key: K) &#123;function getPrototype &lt;T, K extends keyof T&gt;(obj: T, key: K) &#123;  return obj[key]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>test</p></blockquote><pre class="line-numbers language-TypeScript" data-language="TypeScript"><code class="language-TypeScript">import type &#123; Equal, Expect &#125; from &#39;@type-challenges&#x2F;utils&#39;type cases &#x3D; [  Expect&lt;Equal&lt;Expected1, MyPick&lt;Todo, &#39;title&#39;&gt;&gt;&gt;,  Expect&lt;Equal&lt;Expected2, MyPick&lt;Todo, &#39;title&#39; | &#39;completed&#39;&gt;&gt;&gt;,  &#x2F;&#x2F; @ts-expect-error  MyPick&lt;Todo, &#39;title&#39; | &#39;completed&#39; | &#39;invalid&#39;&gt;,  ]interface Todo &#123;  title: string  description: string  completed: boolean&#125;interface Expected1 &#123;  title: string&#125;interface Expected2 &#123;  title: string  completed: boolean&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HYMusic</title>
      <link href="/2022/06/15/uniapp/hy-music/"/>
      <url>/2022/06/15/uniapp/hy-music/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/client-lib/">基础库</a></p></blockquote><ul><li>开发用户程序<ul><li>上层: 用户</li><li>SDK 解析程序 到 应用层<ul><li>wx -&gt; minprogram -&gt; SDK -&gt; 版本不停 SDK不同</li><li>灰度发布: 服务器推送一部分用户测试 -&gt; 测试完成 -&gt;  全量发布 所有用户</li></ul></li></ul></li></ul><h2 id="时间格式化封装"><a href="#时间格式化封装" class="headerlink" title="时间格式化封装"></a>时间格式化封装</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">formatCount</span> <span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> counter <span class="token operator">></span> <span class="token number">100000000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>counter <span class="token operator">/</span> <span class="token number">100000000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'亿'</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>counter <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'万'</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> counter <span class="token operator">+</span> <span class="token string">""</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 5 -> 005 -> 05</span><span class="token keyword">function</span> <span class="token function">padLeftZero</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  time <span class="token operator">=</span> time <span class="token operator">+</span> <span class="token string">""</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">"00"</span><span class="token operator">+</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">formatDuration</span> <span class="token punctuation">(</span><span class="token parameter">dt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  dt <span class="token operator">=</span> dt <span class="token operator">/</span> <span class="token number">1000</span>  <span class="token comment">// 488 / 60 = 8.12m</span>  <span class="token keyword">var</span> minute <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>dt <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span>  <span class="token comment">// 488 % 60 = s</span>  <span class="token keyword">var</span> second <span class="token operator">=</span> dt <span class="token operator">%</span> <span class="token number">60</span>  <span class="token keyword">return</span> <span class="token function">padLeftZero</span><span class="token punctuation">(</span>minute<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> <span class="token function">padLeftZero</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span>  <span class="token comment">// return (minute > 9 ? minute: '0' + minute) + ':' +  (second > 9 ? second: '0' + second)</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">formatCount</span><span class="token operator">:</span> formatCount<span class="token punctuation">,</span>  <span class="token literal-property property">formatDuration</span><span class="token operator">:</span> formatDuration<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组件不作为display-flex的第一个对象-外面包裹一个div-amp-view"><a href="#组件不作为display-flex的第一个对象-外面包裹一个div-amp-view" class="headerlink" title="组件不作为display: flex的第一个对象 外面包裹一个div&amp;view"></a>组件不作为display: flex的第一个对象 外面包裹一个div&amp;view</h2><h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hm-uni项目时没有uni图标的ui库</title>
      <link href="/2022/06/15/uniapp/uni-ui/"/>
      <url>/2022/06/15/uniapp/uni-ui/</url>
      
        <content type="html"><![CDATA[<blockquote><p>进入 uni 的官网   其它的 uni-ui 组件操作类似</p></blockquote><h2 id="1-找到需要的组件"><a class="markdownIt-Anchor" href="#1-找到需要的组件">#</a> 1. 找到需要的组件</h2><p><img src="https://s1.ax1x.com/2022/06/16/X7fdvd.png" alt="选择组件 -&gt; 图标"></p><h2 id="2-打开标签-使用hbuilderx"><a class="markdownIt-Anchor" href="#2-打开标签-使用hbuilderx">#</a> 2. 打开标签 使用 Hbuilderx</h2><blockquote><p>点击 使用 Hbuilder 导入会自动引导到 软件里面安装</p></blockquote><p><img src="https://s1.ax1x.com/2022/06/16/X7fWvj.png" alt="导入组件"></p><h2 id="3-ui下载到的文件夹名字-确认有没有下载"><a class="markdownIt-Anchor" href="#3-ui下载到的文件夹名字-确认有没有下载">#</a> 3. ui 下载到的文件夹名字 确认有没有下载</h2><blockquote><p>文件的名字  <code>uni_modules</code>  如果导入不成功可以先创建文件夹</p></blockquote><p><img src="https://s1.ax1x.com/2022/06/16/X7hndP.png" alt="文件夹名字 &amp; 位置"></p><h2 id="4-直接使用-ui组件"><a class="markdownIt-Anchor" href="#4-直接使用-ui组件">#</a> 4. 直接使用 UI 组件</h2><blockquote><p>最后直接引用即可:  <code>&lt;uni-icons type=&quot;search&quot;&gt;&lt;/uni-icons&gt;</code>    <a href="https://ext.dcloud.net.cn/plugin?name=uni-icons">其它图标</a></p></blockquote><p><img src="https://s1.ax1x.com/2022/06/16/X7hUoV.png" alt="直接使用"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
            <tag> ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp项目注意点</title>
      <link href="/2022/06/15/uniapp/uni-xiang-mu-zhu-yi-dian/"/>
      <url>/2022/06/15/uniapp/uni-xiang-mu-zhu-yi-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="使用下拉操作需要自己调用函数关闭"><a class="markdownIt-Anchor" href="#使用下拉操作需要自己调用函数关闭">#</a> 使用下拉操作需要自己调用函数关闭</h2><blockquote><p>wx.stopPullDownRefresh()</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Uniapp Tools</title>
      <link href="/2022/06/15/uniapp/uniapp-toole/"/>
      <url>/2022/06/15/uniapp/uniapp-toole/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在 vue3 setup 中使用小程序的方法 需要  <code>@dcloudio/uni-app</code>  工具<br>在 vue3 中使用小程序的 uni 扩展组件 需要  <code>@dcloudio/uni-ui</code>  工具<br>网络请求  <code>@escook/request-miniprogram</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序 subPackages</title>
      <link href="/2022/06/15/uniapp/xiao-cheng-xu-fen-bao/"/>
      <url>/2022/06/15/uniapp/xiao-cheng-xu-fen-bao/</url>
      
        <content type="html"><![CDATA[<h1 id="原因"><a class="markdownIt-Anchor" href="#原因">#</a> 原因</h1><blockquote><p>打包时把所有的包都集中在一起 如果文件过大会造成第一次进入加载时间过长<br>避免这种情况的发生可以使用分包的形式 进行分包后的小程序分为:  <code>主分包</code>   <code>分包</code> <br>注意的是  <code>tabBar</code>  页面 必须放在主分包里面<br>分包有两种   <code>独立分包</code>  和  <code>普通分包</code>  且不能嵌套只能是并列关系</p></blockquote><ol><li><code>独立分包</code>  不需要依赖主分包即可自己运行 只能访问自己的资源</li><li><code>普通分包</code>  需要让主分包运行才可以运行 可以 <code>访问主包的公共资源</code>  但是 <code>分包的私有资源之间是不可以互相访问的</code></li><li><code>分包预下载</code> ：进入小程序某个页面时 下载用户下一个需要的分包 从而提升进入后续分包的速度 一个页面的预下载不能超过 2MB<br><img src="https://s1.ax1x.com/2022/06/15/XoeKtx.png" alt="分包 subpackages"></li></ol><h2 id="原生修改配置"><a class="markdownIt-Anchor" href="#原生修改配置">#</a> 原生修改配置</h2><blockquote><p>在根目录的  <code>app.json</code>  配置 subPackages</p></blockquote><h2 id="普通分包"><a class="markdownIt-Anchor" href="#普通分包">#</a> 普通分包</h2><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">&#123;  &quot;pages&quot;: [],  &quot;tabbar&quot;: &#123;&#125;,  &quot;subPackages&quot;: [    &#123;      &quot;root&quot;: &quot;pageA&quot;,      &quot;name&quot;: &quot;PAGEA&quot;,      &quot;pages&quot;: [        &quot;pages&#x2F;catA&#x2F;catA&quot;,        &quot;...&quot;      ]    &#125;,    &#123;      &quot;root&quot;: &quot;pageB&quot;,      &quot;name&quot;: &quot;PAGEB&quot;,      &quot;pages&quot;: [        &quot;pages&#x2F;catB&#x2F;catB&quot;,        &quot;...&quot;      ]    &#125;  ],&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="独立分包"><a class="markdownIt-Anchor" href="#独立分包">#</a> 独立分包</h2><blockquote><p>变为独立分包只需要在对应的分包里添加一个 关键字:  <code>independent</code>   设置为  <code>true</code>  即可</p></blockquote><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">&#123;  &quot;pages&quot;: [],  &quot;tabbar&quot;: &#123;&#125;,  &quot;subPackages&quot;: [    &#123;      &quot;root&quot;: &quot;pageA&quot;,      &quot;name&quot;: &quot;PAGEA&quot;,      &quot;pages&quot;: [        &quot;pages&#x2F;catA&#x2F;catA&quot;,        &quot;...&quot;      ],      &quot;independent&quot;: true    &#125;  ],&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分包预下载"><a class="markdownIt-Anchor" href="#分包预下载">#</a> 分包预下载</h2><p><img src="https://s1.ax1x.com/2022/06/15/Xo0zDJ.png" alt="分包预下载限制"><br>在顶层添加  <code>preloadRule</code>  字段</p><blockquote><p><code>network</code>   那一种网络进行预下载 all 所有 wifi 要对应网络才下载<br> <code>packages</code>  分包名字 或者 分包的路径<br><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/preload.html">官方</a></p></blockquote><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">&#123;  &quot;pages&quot;:[],  &quot;window&quot;:&#123;&#125;,  &quot;subPackages&quot;: [    &#123;      &quot;root&quot;: &quot;pageA&quot;,      &quot;name&quot;: &quot;PAGEA&quot;,      &quot;pages&quot;: [        &quot;pages&#x2F;catA&#x2F;catA&quot;      ]    &#125;      ],  &quot;preloadRule&quot;: &#123;    &quot;pages&#x2F;contact&#x2F;contact&quot;: &#123;      &quot;network&quot;: &quot;all&quot;,      &quot;packages&quot;: [&quot;pageA&quot;]    &#125;  &#125;,  &quot;tabBar&quot;: &#123;    &quot;list&quot;: [&#123;      &quot;pagePath&quot;: &quot;pages&#x2F;home&#x2F;home&quot;,      &quot;text&quot;: &quot;home&quot;    &#125;,&#123;      &quot;pagePath&quot;: &quot;pages&#x2F;message&#x2F;message&quot;,      &quot;text&quot;: &quot;message&quot;    &#125;]  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具库 &amp; 编辑器插件</title>
      <link href="/2022/06/15/tools/gong-ju-ku/"/>
      <url>/2022/06/15/tools/gong-ju-ku/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode"><a class="markdownIt-Anchor" href="#vscode">#</a> VSCode</h2><ol><li>TypeScript Vue Plugin (Volar)<ol><li>Vue Language Features (Volar) 二选一</li></ol></li></ol><h2 id="css动画库"><a class="markdownIt-Anchor" href="#css动画库">#</a> CSS 动画库</h2><ul><li>Tailwind CSS</li><li>Materialize css</li></ul><ol><li><a href="https://angrytools.com/css/animation/">css 动画调试工具</a></li><li><a href="https://www.minimamente.com/project/magic/">css 动画</a></li><li><a href="https://animate.style/">css 文字动画</a></li><li><a href="https://animista.net/play/basic">css 文字动画</a></li></ol><h2 id="vue工具"><a class="markdownIt-Anchor" href="#vue工具">#</a> Vue 工具</h2><ol><li><code>@vueuse/core</code>   操作封装库</li></ol><h2 id="状态管理"><a class="markdownIt-Anchor" href="#状态管理">#</a> 状态管理</h2><ol><li>vuex</li><li>redux</li><li>pinia</li><li>hy-event-store</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2022/06/15/tools/git/"/>
      <url>/2022/06/15/tools/git/</url>
      
        <content type="html"><![CDATA[<h1 id="集中式svn"><a class="markdownIt-Anchor" href="#集中式svn">#</a> 集中式 (svn)</h1><ul><li>svn 因为每次存的都是差异 需要的硬盘空间会相对的小一点  可是回滚的速度会很慢<ul><li>优点:<br> 代码存放在单一的服务器上 便于项目的管理</li><li>缺点:<br> 服务器宕机：员工写的代码得不到保障<br>服务器炸了：整个项目的历史记录都会丢失</li></ul></li></ul><h1 id="分布式git"><a class="markdownIt-Anchor" href="#分布式git">#</a> 分布式 (git)</h1><ul><li>git 每次存的都是项目的完整快照 需要的硬盘空间会相对大一点  (Git 团队对代码做了极致的压缩 最终需要的实际空间比 svn 多不了太多 可是 Git 的回滚速度极快)<ul><li>优点：完全的分布式</li><li>缺点：学习起来比 SVN 陡峭</li></ul></li></ul><h1 id="git配置"><a class="markdownIt-Anchor" href="#git配置">#</a> Git 配置</h1><ul><li>Git 初始化配置<br>一般在新的系统上，我们都需要先配置下自己的 Git 工作环境。配置工作只需一次，以后升级时还会沿用现在的配置。当然，如果需要，你随时可以用相同的命令修改已有的配置。<br>Git 提供了一个叫做 git config 的命令来配置或读取相应的工作环境变量而正是由这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放</li></ul><hr><p>在以下三个不同的地方：</p><ul><li>/etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。若使用 git config 时用 --system 选项，读写的就是这个文件。</li><li>~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 --global 选项，读写的就是这个文件。</li><li>.git/config 文件：当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）这里的配置仅仅针对当前项目有效。</li><li>每一个级别的配置都会覆盖上层的相同配置</li></ul><hr><ul><li>配置内容 ： 用户信息 ：</li><li>第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：</li><li><code>git config --global user.name &quot;damu&quot; </code>  – 生成 user.name 的全局配置</li><li><code>git config --global user.email &quot;damu@example.com &quot;</code>   – 生成 user.email 的全局配置</li><li>要检查已有的配置信息，可以使用 git config --list 命令</li><li>删除配置信息 git config --global --unset user.email</li></ul><h1 id="初始化新仓库"><a class="markdownIt-Anchor" href="#初始化新仓库">#</a> 初始化新仓库</h1><p>命令：git init<br> 解析：要对现有的某个项目开始用 Git 管理，只需到此项目所在的目录，执行：git init<br> 作用：初始化后，在当前目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。不过目前，仅仅是按照既有的结构框架初始化好了里边所有的文件和目录，但我们还没有开始跟踪管理项目中的任何一个文件。<br> .git 目录<br><img src="https://img-blog.csdnimg.cn/20210325143041122.png" alt="在这里插入图片描述"></p><ul><li>hooks  – 目录包含客户端或服务端的钩子脚本</li><li>info – 包含一个全局性排除文件</li><li>logs – 保存日志信息</li><li><strong>objects – 目录存储所有数据内容</strong></li><li><strong>refs – 目录存储指向数据的提交对象的指针（分支）</strong></li><li>config – 文件包含项目特有的配置选项</li><li>description – 用来显示对仓库的描述信息</li><li><strong>HEAD – 文件指示目前被检出的分支</strong></li><li><strong>index – 文件保存暂存区的信息</strong></li></ul><hr><h1 id="基本环境概念"><a class="markdownIt-Anchor" href="#基本环境概念">#</a> 基本环境概念</h1><h2 id="区域"><a class="markdownIt-Anchor" href="#区域">#</a> 区域</h2><ul><li>工作区<ul><li>沙箱环境 - 修改文件</li></ul></li><li>暂存区<ul><li>修改的文件后暂存</li></ul></li><li>版本库<ul><li>存储版本</li></ul></li></ul><h2 id="底层命令对象"><a class="markdownIt-Anchor" href="#底层命令对象">#</a> 底层命令对象</h2><ul><li>git 对象<br> git hash-object -w fileUrl : 生成一个 key (hash 值):val (压缩后的文件内容) 键值对存到.git/objects</li><li>tree 对象<br> git update-index --add --cacheinfo 100644 hash test.txt : 往暂存区添加一条记录 (让 git 对象 对应 上文件名) 存到.git/index<br>git write-tree : 生成树对象存到.git/objects</li><li>commit 对象<br>echo ‘first commit’ | git commit-tree treehash : 生成一个提交对象存到.git/objects</li><li>对以上对象的查询<br> git cat-file -p hash       : 拿对应对象的内容<br> git cat-file -t hash       : 拿对应对象的类型</li></ul><h2 id="查看暂存区"><a class="markdownIt-Anchor" href="#查看暂存区">#</a> 查看暂存区</h2><ul><li>git ls-files -s</li></ul><hr><h1 id="git-底层概念底层命令基础的-linux-命令"><a class="markdownIt-Anchor" href="#git-底层概念底层命令基础的-linux-命令">#</a> Git 底层概念（底层命令）基础的 linux 命令</h1><ul><li>clear ：清除屏幕</li><li>echo ‘test content’：往控制台输出信息 echo ‘test content’ &gt; test.txt</li><li>ll ：将当前目录下的 子文件 &amp; 子目录平铺在控制台</li><li>find 目录名： 将对应目录下的子孙文件 &amp; 子孙目录平铺在控制台 find 目录名 -type f ：将对应目录下的文件平铺在控制台</li><li>rm  文件名 ： 删除文件</li><li>mv 源文件 重命名文件：重命名</li><li>cat 文件的 url : 查看对应文件的内容 vim 文件的 url (在英文模式下)</li><li>按 i 进插入模式  进行文件的编辑</li><li>按 esc 键 &amp; 按：键 进行命令的执行</li><li>q!   强制退出（不保存）</li><li>wq  保存退出</li><li>set nu 设置行号</li></ul><hr><h1 id="git对象-文件的一次性版本"><a class="markdownIt-Anchor" href="#git对象-文件的一次性版本">#</a> Git 对象 - 文件的一次性版本</h1><p>Git 的核心部分是一个简单的键值对数据库。你可以向该数据库插入任意类型<br>的内容，它会返回一个键值，通过该键值可以在任意时刻再次检索该内容</p><ul><li><p>向数据库写入内容 并返回对应键值<br>命令：  <code>echo 'test content' | git hash-object -w --stdin </code> <br> <code>-w</code>  选项指示 hash-object 命令存储数据对象；若不指定此选项，则该命令仅返回对应的键值<br> <code> --stdin</code> （standard input）选项则指示该命令从标准输入读取内容；若不指定此选项，则须在命令尾部给出待存储文件的路径<br> <code>git hash-object -w 文件的路径 </code>  ：  存文件<br> <code>git hash-object 文件的路径</code>   ：  返回对应文件的键值  d670460b4b4aece5915caf5c68d12f560a9fe3e4<br> 返回： 该命令输出一个长度为 40 个字符的校验和。 这是一个 SHA-1 哈希值</p></li><li><p>查找存储数据的<br> <code>find .git/objects -type f</code>  – 查找命令路径下的存储数据</p></li><li><p>根据键值拉取数据<br> <code>git cat-file</code>   <code>-p</code> / <code>-t</code>  d670460b4b4aece5915caf5c68d12f560a9fe3e4<br>-p 选项可指示该命令自动判断内容的类型，并为我们显示格式友好的内容  返回： 对应文件的内容<br> - t 返回它的类型   一般是 bolb 类型</p></li><li><p>单个文件的写入</p><ul><li><code> git hash-object -w test.txt</code>  – 把 test.txt 文件写入到存储数据中</li><li><code>find ./.git/objects/ -type f</code>  – 查看所有写入的数据</li><li><code>git cat-file -p ddbb2d26d3ff8b7afd7eca2b75a60c7f19be97cc</code>  – 查看 hash 值压缩后的源文内容</li></ul></li></ul><h1 id="构建树对象-项目的一次性版本"><a class="markdownIt-Anchor" href="#构建树对象-项目的一次性版本">#</a> 构建树对象 - 项目的一次性版本</h1><p>树对象（tree object），它能解决文件名保存的问题，也允许我们将多个文件组织到一起。Git 以一种类似于 UNIX 文件系统的方式存储内容。所有内容均以树对象和数据对象 (git 对象) 的形式存储，其中树对象对应了 UNIX 中的目录项，数据对象 (git 对象) 则大致上对应文件内容。一个树对象包含了一条或多条记录（每条记录含有一个指向 git 对象或者子树对象的 SHA-1 指针，以及相应的模式、类型、文件名信息）。一个树对象也可以包含另一个树对象。<br>我们可以通过  <code>update-index</code> ； <code>write-tree</code> ； <code>read-tree</code>  等命令来构建树对像并 <code>塞入到暂存区</code> 。</p><hr><p>假设我们做了一系列操作之后得到一个树对像 操作</p><ul><li>利用 update-index 命令 为 test.txt 文件的首个版本 —— 创建一个暂存区。并通过 write-tree 命令生成树对像。<br>命令：<br>git update-index --add --cacheinfo 100644   83baae61804e65cc73a7201a7252750c76066a30  test.txt<br>git write-tree</li><li>文件模式为<ul><li>100644，表明这是一个普通文件</li><li>100755，表示一个可执行文件；</li><li>120000，表示一个符号链接。</li></ul></li><li>–add 选项：<br>因为此前该文件并不在暂存区中 首次需要 —add</li><li>–cacheinfo 选项：<br>因为将要添加的文件位于 Git 数据库中，而不是位于当前目录下 所有需要 —cacheinfo</li></ul><hr><ul><li>新增 new.txt 将 new.txt 和 test.txt 文件的第二个个版本<br>塞入暂存区。并通过 write-tree 命令生成树对像。<br>命令： echo ‘new file’ &gt; new.txt<br>git update-index --cacheinfo 100644   1f7a7a472abf3dd9643fd615f6da379c4acb3e3a test.txt<br>git update-index --add new.txt<br>git write-tree</li></ul><hr><ol start="3"><li>将第一个树对象加入第二个树对象，使其成为新的树对象<br>命令：<br>git read-tree  --prefix=bak d8329fc1cc938780ffdd9f94e0d364e0ea74f579<br>git write-tree<br>read-tree 命令，可以把树对象读入暂存区</li></ol><hr><ul><li>git cat-file -p master^{tree}（或者是树对象的 hash）<ul><li>master^{tree} 语法表示 master 分支上最新的提交所指向的树对象。</li></ul></li><li>解析树对象<br> Git 根据某一时刻暂存区（即 index 区域）所表示的状态创建并记录一个对应的树对象，如此重复便可依次记录（某个时间段内）一系列的树对象。其实树对象是对暂存区内操作的抽象，这颗树对象相对于就是快照。当我们的工作区有任何更改同步到暂存区时。便会调用 write-tree 命令通过 write-tree 命令向暂存区内容写入一个树对象。它会根据当前暂存区状态自动创建一个新的树对象。即每一次同步都产生一颗树对象。且该命令会返回一个 hash 指向树对象。在 Git 中每一个文件（数据）都对应一个 hash（类型 blob）每一个树对象都对应一个 hash（类型 tree）<ul><li>总结<br>我们可以认为树对象就是我们项目的快照</li></ul></li></ul><h1 id="提交对象"><a class="markdownIt-Anchor" href="#提交对象">#</a> 提交对象</h1><p>我们可以通过调用 commit-tree 命令创建一个提交对象，为此需要指定一个树对象的 SHA-1 值，以及该提交的父提交对象（如果有的话 第一次将暂存区做快照就没有父对象）</p><ul><li>创建提交对象<br> echo ‘first commit’ | git commit-tree d8329f<br> 返回： fdf4fc3344e67ab068f836878b6c4951e3b15f3d （hash 值）</li><li>查看提交对象<br> git cat-file -p fdf4fc3<br> 返回： tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579</li><li>提交对象的格式<br>提交对象的格式很简单：它先指定一个顶层树对象，代表当前项目快照；然后是作者 / 提交者信息（依据你的 <a href="http://user.name">user.name</a> 和 user.email 配置来设定，外加一个时间戳）；留空一行，最后是提交注释<br>接着，我们将创建另两个提交对象，它们分别引用各自的上一个提交（作为其父提交对象）：<br>echo ‘second commit’ | git commit-tree 0155eb -p fdf4fc3  （提交对象是链式的除了第一个没有大佬，其它的版本都要带上它的上一个版本   0155eb（第二个版本） -p fdf4fc3（第一个版本） ）<br>echo ‘third commit’ | git commit-tree 3c4e9c -p cac0cab</li><li>注意<br> git commit-tree 不但生成提交对象 而且会将对应的快照（树对象）提交到本地库中</li></ul><h1 id="流程简化操做-高层命令-crud"><a class="markdownIt-Anchor" href="#流程简化操做-高层命令-crud">#</a> 流程简化操做 （高层命令 -CRUD）</h1><p>创建工作目录 对工作目录进行修改</p><ul><li>git init  初始化仓库</li></ul><hr><ul><li>git status   – 查看文件的状态</li><li>git diff（不加参数）—(当前做的哪些更新还没有暂存)</li><li>带参数:git diff –cached 或者 git diff –staged  (- 推荐)(已更新已经暂存起来准备好了还没有提交？)</li><li>git  log  --oneline /--pretty=oneline  – 查看提交的历史版本记录</li></ul><hr><ul><li><p>git add ./</p><ul><li>git hash-object -w 文件名 (修改多少个工作目录中的文件，此命令就要被执行多少次)</li><li>git update -index --add …</li></ul></li><li><p>git rm 文件名  删除文件目录中对应的文件 再将修改添加到暂存区</p></li><li><p>git mv 源文件名 新文件名   将文件工作目录的文件进行重命名 再将修改添加到暂存区</p><hr></li><li><p><code>git commit  vim</code>  – 提交</p></li><li><p><code>git commit -a </code>   – 跳过暂存区</p></li><li><p><code>git commit -m “”</code>    – 注释内容</p></li><li><p><code>git commit -a -m  “”</code>   注释内容  跳过暂存区</p></li><li><p><code>gir write-tree</code>  – 写入树</p></li><li><p><code>git commit-tree</code>  – 提交树</p></li></ul><hr><h1 id="分支操作"><a class="markdownIt-Anchor" href="#分支操作">#</a> 分支操作</h1><ul><li><p><code>git branch</code>   – 显示分支的列表</p></li><li><p><code>git branch  分支名字</code>   – 创建一个分支</p></li><li><p><code>git branch -v</code>   — 可以查看每一个分支的最后一次提交</p></li><li><p><code>git branch  </code>   <code>-d</code>  /  <code>-D </code>  名字 `  – 删除分支 -D 强行删除</p></li><li><p><code>git checkout  lys(分支名)</code>   – 切换分支</p></li><li><p><code>git log --oneline --decorate --graph --all</code>   – 查看项目分叉历史</p></li><li><p><code>git merge 分支名</code>   – 分支合并</p></li><li><p>git branch –merged  查看哪些分支已经合并到当前分支，在这个列表中分支名字前没有 * 号的分支通常可以使用  <code>git branch -d</code>  删除掉；</p></li><li><p><code>git config --global alias.名字   命令的名字</code>   –  给命令（指令）起别名方便使用</p><ul><li><code>git config --global alias.lol  &quot;log --oneline --decorate --graph --all&quot; </code>  （把命令别名为 lol）运行时 git lol 即可</li></ul></li><li></li></ul><h1 id="tag-标签"><a class="markdownIt-Anchor" href="#tag-标签">#</a> Tag 标签</h1><ul><li><code>git tag </code>  – 列出标签</li><li><code>git tag  tagname</code>    – 给当前分支，版本起标签名</li><li><code>git  tag  tagname  commitHash</code>   – 给指定的版本（Hash）起标签名</li><li><code>git show  tagname</code>    – 查看指定标签信息</li><li><code>git tag -d  tagname</code>    – 删除指定的标签 v1.0</li><li><code>git checkout  tagname</code>   – 检出切换指定标签版本（如果指定的标签版本没有分支会产生头部分离的情况需要 给 它 起一条分支  <code> git checkout -b “v1.0”</code> ）</li></ul><h1 id="命令的总结使用"><a class="markdownIt-Anchor" href="#命令的总结使用">#</a> 命令的总结使用</h1><h2 id="安装"><a class="markdownIt-Anchor" href="#安装">#</a> 安装</h2>  <pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="初始化配置"><a class="markdownIt-Anchor" href="#初始化配置">#</a> 初始化配置</h2><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;damu&quot;git config --global user.email damu@example.com    git config --list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="初始化仓库"><a class="markdownIt-Anchor" href="#初始化仓库">#</a> 初始化仓库</h2><pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="c新增"><a class="markdownIt-Anchor" href="#c新增">#</a> C (新增)</h2><p>在工作目录中新增文件<br><pre class="line-numbers language-none"><code class="language-none">git statusgit add .&#x2F;git commit -m &quot;msg&quot;    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h2 id="u修改"><a class="markdownIt-Anchor" href="#u修改">#</a> U (修改)</h2>  <pre class="line-numbers language-none"><code class="language-none">在工作目录中修改文件   git status   git add .&#x2F;   git commit -m &quot;msg&quot;     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="d删除-重命名"><a class="markdownIt-Anchor" href="#d删除-重命名">#</a> D (删除 &amp; 重命名)</h2><pre class="line-numbers language-none"><code class="language-none">git rm 要删除的文件     git mv 老文件 新文件git  status             git  statusgit commit -m &quot;msg&quot;     git commit -m &quot;msg&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="r查询"><a class="markdownIt-Anchor" href="#r查询">#</a> R (查询)</h2><pre class="line-numbers language-GIT" data-language="GIT"><code class="language-GIT">git  status   :  查看工作目录中文件的状态(已跟踪(已提交 已暂存 已修改) 未跟踪)git  diff     :  查看未暂存的修改git  diff --cache : 查看未提交的暂存git  log --oneline : 查看提交记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分支"><a class="markdownIt-Anchor" href="#分支">#</a> 分支</h2><ul><li>分支的本质其实就是一个提交对象！！！</li><li>HEAD:<br> 是一个指针 它默认指向 master 分支 切换分支时其实就是让 HEAD 指向不同的分支<br>每次有新的提交时 HEAD 都会带着当前指向的分支 一起往前移动<br> <code>git  log --oneline --decorate --graph --all</code>  : 查看整个项目的分支图<br> <code>git branch</code>  : 查看分支列表<br> <code>git branch -v</code> : 查看分支指向的最新的提交<br> <code>git branch name</code>  : 在当前提交对象上创建新的分支<br> <code>git branch name commithash</code> : 在指定的提交对象上创建新的分支<br> <code>git checkout name</code>  :     切换分支<br> <code>git branch -d name</code>  : 删除空的分支 删除已经被合并的分支<br> <code>git branch -D name</code>  : 强制删除分支</li></ul><h1 id="分支操作-2"><a class="markdownIt-Anchor" href="#分支操作-2">#</a> 分支操作</h1><h2 id="git分支本质"><a class="markdownIt-Anchor" href="#git分支本质">#</a> git 分支本质</h2><p>分支本质是一个提交对象，所有的分支都会有机会被 HEAD 所引用 (HEAD 一个时刻只会指向一个分支)<br> 当我们有新的提交的时候 HEAD 会携带当前持有的分支往前移动</p><h2 id="git分支命令"><a class="markdownIt-Anchor" href="#git分支命令">#</a> git 分支命令</h2><ul><li>创建分支  : <code> git branch branchname</code></li><li>切换分支  :  <code>git checkout  branchname</code></li><li>创建 &amp; 切换分支   :  <code>git checkout -b branchname</code></li><li>版本穿梭 (时光机) :   <code>git branch branchname commitHash  </code></li><li>普通删除分支    :  <code>git  branch -d branchname</code></li><li>强制删除分支   : <code> git  branch -D branchname</code></li><li>合并分支   :  <code>git merge branchname</code> <br> 快进合并 --&gt; 不会产生冲突<br>典型合并 --&gt; 有机会产生冲突</li><li>解决冲突 --&gt; 打开冲突的文件 进行修改 add commit</li><li>查看分支列表 :  <code>git branch</code> <br> 查看合并到当前分支的分支列表: git branch --merged<br> 一旦出现在这个列表中 就应该删除<br>查看没有合并到当前分支的分支列表: git branch --no-merged<br> 一旦出现在这个列表中 就应该观察一下是否需要合并</li></ul><h2 id="git分支的注意点-存储"><a class="markdownIt-Anchor" href="#git分支的注意点-存储">#</a> git 分支的注意点 &amp; 存储</h2><ul><li><p>在切换的时候 一定要保证当前分支是干净的！！！</p><ul><li>允许切换分支:<br> 分支上所有的内容处于 已提交状态<br> (避免) 分支上的内容是初始化创建 处于未跟踪状态<br> (避免) 分支上的内容是初始化创建 第一次处于已暂存状态</li><li>不允许切分支:<br> 分支上所有的内容处于 已修改状态  或 第二次以后的已暂存状态</li></ul></li><li><p>在分支上的工作做到一半时 如果有切换分支的需求，我们应该将现有的工作存储起来<br> <code> git stash</code>  : 会将当前分支上的工作推到一个栈中<br>分支切换  进行其他工作 完成其他工作后 切回原分支<br> <code>git stash apply</code>  : 将栈顶的工作内容还原 但不让任何内容出栈<br> <code>git stash drop</code>   : 取出栈顶的工作内容后 就应该将其删除 (出栈)<br> <code>git stash pop</code>    :       <code>git stash apply +  git stash drop </code> <br> <code> git stash list</code>  : 查看存储</p></li></ul><h2 id="后悔药"><a class="markdownIt-Anchor" href="#后悔药">#</a> 后悔药</h2><ul><li>撤销工作目录的修改   :   <code>git checkout -- filename</code></li><li>撤销暂存区的修改     :   <code>git reset HEAD  filename</code>      git restore --staged baidu.txt</li><li>撤销提交  :   <code>git commit --amend</code></li></ul><h2 id="reset三部曲"><a class="markdownIt-Anchor" href="#reset三部曲">#</a> reset 三部曲</h2><ul><li><code> git reset --soft commithash</code>     —&gt; 用 commithash 的内容重置 HEAD 内容</li><li><code>git reset [--mixed] commithash</code>  —&gt; 用 commithash 的内容重置 HEAD 内容 重置暂存区</li><li><code>git reset --hard commithash</code>     —&gt; 用 commithash 的内容重置 HEAD 内容 重置暂存区 重置工作目录</li></ul><h2 id="路径reset"><a class="markdownIt-Anchor" href="#路径reset">#</a> 路径 reset</h2><ul><li>所有的路径 reset 都要省略第一步！！！<br> 第一步是重置 HEAD 内容  我们知道 HEAD 本质指向一个分支 分支的本质是一个提交对象<br>提交对象 指向一个树对象 树对象又很有可能指向多个 git 对象 一个 git 对象代表一个文件！！！<br>HEAD 可以代表一系列文件的状态！！！</li><li>git reset [–mixed] commithash filename<br> 用 commithash 中 filename 的内容重置暂存区</li></ul><h2 id="checkout深入理解"><a class="markdownIt-Anchor" href="#checkout深入理解">#</a> checkout 深入理解</h2><ul><li><p>git   checkout brancname  跟   git reset --hard commithash 特别像</p><ul><li>共同点<br>都需要重置 HEAD   暂存区   工作目录</li><li>区别<br> checkout 对工作目录是安全的    reset --hard 是强制覆盖<br> checkout 动 HEAD 时不会带着分支走而是切换分支<br> reset --hard 时是带着分支走</li></ul></li><li><p>checkout + 路径<br> * git checkout commithash  filename<br> 重置暂存区<br>重置工作目录<br> * git checkout – filename<br> 重置工作目录</p></li></ul><h1 id="eslint"><a class="markdownIt-Anchor" href="#eslint">#</a> eslint</h1><p>js 代码的检查工具<br>下载: npm i eslint -D<br> 使用:<br> 生成配置文件 npx eslint --init<br> 检查 js 文件   npx eslint 目录名<br>命中的规则:<br> 字符串必须使用单引号<br>语句结尾不能有分号<br>文件的最后必须要有换行</p><h2 id="eslint结合git"><a class="markdownIt-Anchor" href="#eslint结合git">#</a> eslint 结合 git</h2><p>husky: 哈士奇，为 Git 仓库设置钩子程序<br>使用<br>在仓库初始化完毕之后 再去安装哈士奇<br>在 package.json 文件写配置</p><pre class="line-numbers language-language-JSON"><code class="language-language-JSON">        "husky": &#123;            "hooks": &#123;              "pre-commit": "npm run lint"                 //在git commit之前一定要通过npm run lint的检查              // 只有npm run lint不报错时 commit才能真正的运行            &#125;          &#125;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="远程操作仓库常用命令"><a class="markdownIt-Anchor" href="#远程操作仓库常用命令">#</a> 远程操作仓库常用命令</h1><ul><li><code>git remote add &lt; shortname &gt; &lt; url&gt;</code>    – 添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写</li><li><code>git remote –v</code>   – 显示远程仓库使用的 Git 别名与其对应的 URL</li><li><code>git branch -vv</code>  – 查看设置的所有分支跟踪</li><li><code>git remote show [remote-name]</code>   – 查看某一个远程仓库的更多信息</li><li><code>git remote rename pb paul</code>   – 重命名</li><li><code>git remote rm [remote-name]</code>   – 如果因为一些原因想要移除一个远程仓库 - 你已经从服务器上搬走了或不再想使用某一个特定的镜像了，又或者某一个贡献者不再贡献了</li><li><code>git config --global  --unset user.name  [name] </code>   – <a href="http://xn--user-4s8f41bp88b6r3c10qe14bpyl.name">删除全局配置的 user.name</a>  其中 <code>[name]</code>  可以不写</li><li><code>git config --global  --unset user.email  [name] </code>   – 删除全局配置的 user.email 其中 <code>[name]</code>  可以不写</li></ul><hr><ul><li><p><code>git push [remote-name] [branch-name]</code>  – 将本地项目的 master 分支推送到 origin （别名）服务器</p></li><li><p><code>git clone url </code>    – 克隆一个远程仓库到本地（克隆时不需要 git init）默认克隆时为远程仓库起的别名为 origin</p></li><li><p><code>git fetch [remote-name]</code>  – 这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看  ------ 必须注意  <code>git fetch </code>  命令会将数据拉取到你的本地仓库 - 它并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。</p><ul><li><code>git megre  branch-name</code>    – 合并分支</li></ul></li><li><p><code>git push origin serverfix</code>  – 推送一个名为 <code>serverfix</code>  的分支到远程仓库上去</p><ul><li><code>git push origin serverfix:awesomebranch</code>   – 也可以在推送的时候修改名字</li></ul></li><li><p><code>git pull</code>  – 获取在本地上没有远程仓库的资料 即  <code>拉取数据</code></p></li><li><p><code>git  push  </code>  – 推送本地资料到远程仓库上面去</p><ul><li><code>git push remote-name  branch-name</code>   – 也可以指定推送的分支和要推送的分支到远程仓库上</li></ul></li><li><p><code>git branch -u   remotename/branchname</code>  – 在当前分支跟踪 远程仓库的分支</p></li><li><p><code>git checkout -b serverfix origin/serverfix</code>   – 创建分支的同时跟踪远程分支（其他协作者）</p><ul><li><code>git checkout --track origin/serverfix</code>    – 这是一个十分常用的操作所以 Git 提供了 --track 快捷方式 — serverfix 别名和跟踪分支名一样</li></ul></li><li></li></ul><hr><ul><li><code>git push origin --delete serverfix</code>  –  // 删除远程分支</li><li><code>git remote prune origin --dry-run</code>   – // 列出仍在远程跟踪但是远程已被删除的无用分支</li><li><code>git remote prune origin </code>   – // 清除上面命令列出来的远程跟踪</li></ul><h1 id="pull-request-流程"><a class="markdownIt-Anchor" href="#pull-request-流程">#</a> pull request 流程</h1><p><strong>如果你想要参与某个项目，但是并没有推送权限，这时可以对这个项目进行 “派生”（Fork）。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限。通过这种方式，项目的管理者不再需要忙着把用户添加到贡献者列表并给予他们推送权限。 人们可以派生这个项目，将修改推送到派生出的项目副本中，并通过创建合并请求（Pull Request）来让他们的改动进入源版本库。</strong><br>基本流程：</p><ol><li>从 master 分支中创建一个新分支 （自己 fork 的项目）</li><li>提交一些修改来改进项目 （自己 fork 的项目）</li><li>将这个分支推送到 GitHub 上 （自己 fork 的项目）</li><li>创建一个合并请求</li><li>讨论，根据实际情况继续修改</li><li>项目的拥有者合并或关闭你的合并请求<br>注意点：<br>每次在发起新的 Pull Request 时 要去拉取最新的源仓库的代码<br>而不是自己 fork 的那个仓库。</li></ol><ul><li>git remote add &lt;shortname 源仓库&gt; &lt;url 源仓库 &gt;</li><li>git fetch 远程仓库名字</li><li>git merge 对应的远程跟踪分支</li></ul><hr><h2 id="三个必须懂得概念"><a class="markdownIt-Anchor" href="#三个必须懂得概念">#</a> 三个必须懂得概念</h2><p>本地分支<br>远程跟踪分支 (remote / 分支名)<br> 远程分支</p><h2 id="远程协作的基本流程"><a class="markdownIt-Anchor" href="#远程协作的基本流程">#</a> 远程协作的基本流程</h2><p>第一步：项目经理创建一个空的远程仓库<br>第二步：项目经理创建一个待推送的本地仓库<br>第三步：为远程仓库配别名  配完用户名 邮箱<br>第四步：在本地仓库中初始化代码 提交代码<br>第五步：推送<br>第六步：邀请成员<br>第七步：成员克隆远程仓库<br>第八步：成员做出修改<br>第九步：成员推送自己的修改<br>第十步：项目经理拉取成员的修改</p><h2 id="做跟踪"><a class="markdownIt-Anchor" href="#做跟踪">#</a> 做跟踪</h2><p>克隆才仓库时 会自动为 master 做跟踪<br>本地没有分支<br> git checkout --track 远程跟踪分支 (remote / 分支名)<br> 本地已经创建了分支<br> git branch -u 远程跟踪分支 (remote / 分支名)</p><h2 id="推送"><a class="markdownIt-Anchor" href="#推送">#</a> 推送</h2><p>git push</p><h2 id="拉取"><a class="markdownIt-Anchor" href="#拉取">#</a> 拉取</h2><p>git pull</p><h2 id="pull-request"><a class="markdownIt-Anchor" href="#pull-request">#</a> pull request</h2><p>让第三方人员参与到项目中 fork</p><h2 id="使用频率最高的五个命令"><a class="markdownIt-Anchor" href="#使用频率最高的五个命令">#</a> 使用频率最高的五个命令</h2><p>git status<br>git add<br>git commit<br>git push<br>git pull</p><h1 id="远程分支"><a class="markdownIt-Anchor" href="#远程分支">#</a> 远程分支</h1><h2 id="远程跟踪分支"><a class="markdownIt-Anchor" href="#远程跟踪分支">#</a> 远程跟踪分支</h2><h2 id="本地分支"><a class="markdownIt-Anchor" href="#本地分支">#</a> 本地分支</h2><p>正常的数据推送 和 拉取步骤</p><ol><li>确保本地分支已经跟踪了远程跟踪分支</li><li>拉取数据 : git pull</li><li>上传数据: git push</li></ol><p>一个本地分支怎么去跟踪一个远程跟踪分支</p><ol><li>当克隆的时候 会自动生成一个 master 本地分支 (已经跟踪了对应的远程跟踪分支)</li><li>在新建其他分支时 可以指定想要跟踪的远程跟踪分支<br> git checkout -b 本地分支名 远程跟踪分支名<br> git checkout --track  远程跟踪分支名</li><li>将一个已经存在的本地分支 改成 一个跟踪分支<br> git branch -u 远程跟踪分支名</li></ol><h2 id="团队协作"><a class="markdownIt-Anchor" href="#团队协作">#</a> 团队协作</h2><ol><li><p>项目经理初始化远程仓库<br>一定要初始化一个空的仓库；在 github 上操作</p></li><li><p>项目经理创建本地仓库<br> git remote 别名 仓库地址 (https)<br> git init ; 将源码复制进来<br>修改用户名 修改邮箱<br> git add<br>git commit</p></li><li><p>项目经理推送本地仓库到远程仓库<br>清理 windows 凭据<br> git push  别名 分支  (输入用户名 密码；推完之后会附带生成远程跟踪分支)</p></li><li><p>项目邀请成员 &amp; 成员接受邀请<br>在 github 上操作</p></li><li><p>成员克隆远程仓库<br> git clone  仓库地址 (在本地生成.git 文件 默认为远程仓库配了别名 orgin)<br> 只有在克隆的时候 本地分支 master 和 远程跟踪分支别名 /master 是有同步关系的</p></li><li><p>成员做出贡献<br>修改源码文件<br> git add<br>git commit<br>git push  别名 分支 (输入用户名 密码；推完之后会附带生成远程跟踪分支)</p></li><li><p>项目经理更新修改<br> git fetch 别名 (将修改同步到远程跟踪分支上)<br> git merge 远程跟踪分支</p></li></ol><h2 id="冲突"><a class="markdownIt-Anchor" href="#冲突">#</a> 冲突</h2><p>git 本地操作会不会有冲突？<br> 典型合并的时候<br> git 远程协作的时候 会不会有冲突？<br>push<br>pull<br> 修改再提交</p><h2 id="忽略某些文件"><a class="markdownIt-Anchor" href="#忽略某些文件">#</a> 忽略某些文件</h2><ul><li><code>.gitignore</code>  文件  写上条件 如 ： 文件夹  或 正则表达式</li></ul><h1 id="ssh"><a class="markdownIt-Anchor" href="#ssh">#</a> SSH</h1><p><code>ssh-keygen –t rsa –C 你的邮箱：生成公私钥</code> <br>.ssh 文件位置： <code>C:\Users\Administrator\.ssh</code> <br> <code>ssh -T git@github.com</code>  ：测试公私钥是否已经配对</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
